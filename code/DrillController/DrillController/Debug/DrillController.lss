
DrillController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  0000121a  000012ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000121a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000da  00800142  00800142  000012f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012f0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000003b0  00000000  00000000  00001320  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000005b4  00000000  00000000  000016d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000056a7  00000000  00000000  00001c84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001280  00000000  00000000  0000732b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001fbe  00000000  00000000  000085ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007ac  00000000  00000000  0000a56c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001a75  00000000  00000000  0000ad18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023a1  00000000  00000000  0000c78d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000378  00000000  00000000  0000eb2e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 34 03 	jmp	0x668	; 0x668 <__vector_16>
      44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      48:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__vector_18>
      4c:	0c 94 67 05 	jmp	0xace	; 0xace <__vector_19>
      50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	24 00       	.word	0x0024	; ????
      6e:	27 00       	.word	0x0027	; ????
      70:	2a 00       	.word	0x002a	; ????

00000072 <port_to_output_PGM>:
      72:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

0000007c <port_to_input_PGM>:
      7c:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

00000086 <digital_pin_to_port_PGM>:
      86:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      96:	03 03 03 03                                         ....

0000009a <digital_pin_to_bit_mask_PGM>:
      9a:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      aa:	04 08 10 20                                         ... 

000000ae <digital_pin_to_timer_PGM>:
      ae:	00 00 00 07 00 02 01 00 00 03 04 06 00 00 00 00     ................
      be:	00 00 00 00                                         ....

000000c2 <__ctors_start>:
      c2:	06 03       	mulsu	r16, r22
      c4:	cd 06       	cpc	r12, r29

000000c6 <__ctors_end>:
      c6:	11 24       	eor	r1, r1
      c8:	1f be       	out	0x3f, r1	; 63
      ca:	cf ef       	ldi	r28, 0xFF	; 255
      cc:	d8 e0       	ldi	r29, 0x08	; 8
      ce:	de bf       	out	0x3e, r29	; 62
      d0:	cd bf       	out	0x3d, r28	; 61

000000d2 <__do_copy_data>:
      d2:	11 e0       	ldi	r17, 0x01	; 1
      d4:	a0 e0       	ldi	r26, 0x00	; 0
      d6:	b1 e0       	ldi	r27, 0x01	; 1
      d8:	ea e1       	ldi	r30, 0x1A	; 26
      da:	f2 e1       	ldi	r31, 0x12	; 18
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <__do_copy_data+0x10>
      de:	05 90       	lpm	r0, Z+
      e0:	0d 92       	st	X+, r0
      e2:	a2 34       	cpi	r26, 0x42	; 66
      e4:	b1 07       	cpc	r27, r17
      e6:	d9 f7       	brne	.-10     	; 0xde <__do_copy_data+0xc>

000000e8 <__do_clear_bss>:
      e8:	22 e0       	ldi	r18, 0x02	; 2
      ea:	a2 e4       	ldi	r26, 0x42	; 66
      ec:	b1 e0       	ldi	r27, 0x01	; 1
      ee:	01 c0       	rjmp	.+2      	; 0xf2 <.do_clear_bss_start>

000000f0 <.do_clear_bss_loop>:
      f0:	1d 92       	st	X+, r1

000000f2 <.do_clear_bss_start>:
      f2:	ac 31       	cpi	r26, 0x1C	; 28
      f4:	b2 07       	cpc	r27, r18
      f6:	e1 f7       	brne	.-8      	; 0xf0 <.do_clear_bss_loop>

000000f8 <__do_global_ctors>:
      f8:	10 e0       	ldi	r17, 0x00	; 0
      fa:	c6 ec       	ldi	r28, 0xC6	; 198
      fc:	d0 e0       	ldi	r29, 0x00	; 0
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__do_global_ctors+0x10>
     100:	22 97       	sbiw	r28, 0x02	; 2
     102:	fe 01       	movw	r30, r28
     104:	0e 94 07 09 	call	0x120e	; 0x120e <__tablejump__>
     108:	c2 3c       	cpi	r28, 0xC2	; 194
     10a:	d1 07       	cpc	r29, r17
     10c:	c9 f7       	brne	.-14     	; 0x100 <__do_global_ctors+0x8>
     10e:	0e 94 c7 02 	call	0x58e	; 0x58e <main>
     112:	0c 94 0b 09 	jmp	0x1216	; 0x1216 <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <_ZN4GPIO11parsePinMapEh>:
 */ 
#include "GPIO.h"

void GPIO::parsePinMap(uint8_t PORT_PIN)
{
	if(PORT_PIN>=0 && PORT_PIN <= 7)
     11a:	68 30       	cpi	r22, 0x08	; 8
     11c:	38 f4       	brcc	.+14     	; 0x12c <_ZN4GPIO11parsePinMapEh+0x12>
	{
		GPIO_ADD =  &PORTD;
     11e:	2b e2       	ldi	r18, 0x2B	; 43
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	fc 01       	movw	r30, r24
     124:	31 83       	std	Z+1, r19	; 0x01
     126:	20 83       	st	Z, r18
		pin = PORT_PIN;
     128:	62 83       	std	Z+2, r22	; 0x02
     12a:	08 95       	ret
	}
	
	else if(PORT_PIN>=8 && PORT_PIN<=13)
     12c:	48 ef       	ldi	r20, 0xF8	; 248
     12e:	46 0f       	add	r20, r22
     130:	46 30       	cpi	r20, 0x06	; 6
     132:	38 f4       	brcc	.+14     	; 0x142 <_ZN4GPIO11parsePinMapEh+0x28>
	{
		GPIO_ADD = &PORTB;
     134:	25 e2       	ldi	r18, 0x25	; 37
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	fc 01       	movw	r30, r24
     13a:	31 83       	std	Z+1, r19	; 0x01
     13c:	20 83       	st	Z, r18
		pin = PORT_PIN-8;
     13e:	42 83       	std	Z+2, r20	; 0x02
     140:	08 95       	ret
	}
	
	else if(PORT_PIN>= A0 && PORT_PIN<= A5)
     142:	6e 50       	subi	r22, 0x0E	; 14
     144:	66 30       	cpi	r22, 0x06	; 6
     146:	30 f4       	brcc	.+12     	; 0x154 <_ZN4GPIO11parsePinMapEh+0x3a>
	{
		GPIO_ADD = &PORTC;
     148:	28 e2       	ldi	r18, 0x28	; 40
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	fc 01       	movw	r30, r24
     14e:	31 83       	std	Z+1, r19	; 0x01
     150:	20 83       	st	Z, r18
		pin = PORT_PIN-14;
     152:	62 83       	std	Z+2, r22	; 0x02
     154:	08 95       	ret

00000156 <_ZN4GPIO9setOutPutEv>:
	}
}

void GPIO::setOutPut()
{
	*(GPIO_ADD-1) |= (1<<pin); //DDR address is always PORT address-1 for respective PORTs
     156:	dc 01       	movw	r26, r24
     158:	ed 91       	ld	r30, X+
     15a:	fc 91       	ld	r31, X
     15c:	11 97       	sbiw	r26, 0x01	; 1
     15e:	42 91       	ld	r20, -Z
     160:	21 e0       	ldi	r18, 0x01	; 1
     162:	30 e0       	ldi	r19, 0x00	; 0
     164:	b9 01       	movw	r22, r18
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	0c 90       	ld	r0, X
     16a:	02 c0       	rjmp	.+4      	; 0x170 <_ZN4GPIO9setOutPutEv+0x1a>
     16c:	66 0f       	add	r22, r22
     16e:	77 1f       	adc	r23, r23
     170:	0a 94       	dec	r0
     172:	e2 f7       	brpl	.-8      	; 0x16c <_ZN4GPIO9setOutPutEv+0x16>
     174:	cb 01       	movw	r24, r22
     176:	84 2b       	or	r24, r20
     178:	80 83       	st	Z, r24
     17a:	08 95       	ret

0000017c <_ZN4GPIO4HighEv>:
}

void GPIO::High()
{
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	ec 01       	movw	r28, r24
	setOutPut();
     182:	0e 94 ab 00 	call	0x156	; 0x156 <_ZN4GPIO9setOutPutEv>
	*(GPIO_ADD) |= (1<<pin);
     186:	e8 81       	ld	r30, Y
     188:	f9 81       	ldd	r31, Y+1	; 0x01
     18a:	40 81       	ld	r20, Z
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	c9 01       	movw	r24, r18
     192:	0a 80       	ldd	r0, Y+2	; 0x02
     194:	02 c0       	rjmp	.+4      	; 0x19a <_ZN4GPIO4HighEv+0x1e>
     196:	88 0f       	add	r24, r24
     198:	99 1f       	adc	r25, r25
     19a:	0a 94       	dec	r0
     19c:	e2 f7       	brpl	.-8      	; 0x196 <_ZN4GPIO4HighEv+0x1a>
     19e:	84 2b       	or	r24, r20
     1a0:	80 83       	st	Z, r24
}
     1a2:	df 91       	pop	r29
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <_ZN4GPIO3LowEv>:

void GPIO::Low()
{
     1a8:	cf 93       	push	r28
     1aa:	df 93       	push	r29
     1ac:	ec 01       	movw	r28, r24
	setOutPut();
     1ae:	0e 94 ab 00 	call	0x156	; 0x156 <_ZN4GPIO9setOutPutEv>
	*GPIO_ADD &= ~(1<<pin);
     1b2:	e8 81       	ld	r30, Y
     1b4:	f9 81       	ldd	r31, Y+1	; 0x01
     1b6:	40 81       	ld	r20, Z
     1b8:	21 e0       	ldi	r18, 0x01	; 1
     1ba:	30 e0       	ldi	r19, 0x00	; 0
     1bc:	c9 01       	movw	r24, r18
     1be:	0a 80       	ldd	r0, Y+2	; 0x02
     1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <_ZN4GPIO3LowEv+0x1e>
     1c2:	88 0f       	add	r24, r24
     1c4:	99 1f       	adc	r25, r25
     1c6:	0a 94       	dec	r0
     1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <_ZN4GPIO3LowEv+0x1a>
     1ca:	80 95       	com	r24
     1cc:	84 23       	and	r24, r20
     1ce:	80 83       	st	Z, r24
}
     1d0:	df 91       	pop	r29
     1d2:	cf 91       	pop	r28
     1d4:	08 95       	ret

000001d6 <_ZN4GPIO6toggleEv>:

void GPIO::toggle()
{
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	ec 01       	movw	r28, r24
	setOutPut();
     1dc:	0e 94 ab 00 	call	0x156	; 0x156 <_ZN4GPIO9setOutPutEv>
	*GPIO_ADD ^= (1<<pin);
     1e0:	e8 81       	ld	r30, Y
     1e2:	f9 81       	ldd	r31, Y+1	; 0x01
     1e4:	40 81       	ld	r20, Z
     1e6:	21 e0       	ldi	r18, 0x01	; 1
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	c9 01       	movw	r24, r18
     1ec:	0a 80       	ldd	r0, Y+2	; 0x02
     1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <_ZN4GPIO6toggleEv+0x1e>
     1f0:	88 0f       	add	r24, r24
     1f2:	99 1f       	adc	r25, r25
     1f4:	0a 94       	dec	r0
     1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <_ZN4GPIO6toggleEv+0x1a>
     1f8:	84 27       	eor	r24, r20
     1fa:	80 83       	st	Z, r24
}
     1fc:	df 91       	pop	r29
     1fe:	cf 91       	pop	r28
     200:	08 95       	ret

00000202 <_ZN4GPIO14setInputPullUpEv>:
	*(GPIO_ADD-1) &= ~(1<<pin);
	*(GPIO_ADD) &= ~(1<<pin);
}

void GPIO::setInputPullUp()
{
     202:	fc 01       	movw	r30, r24
	*(GPIO_ADD-1) &= ~(1<<pin);
     204:	a0 81       	ld	r26, Z
     206:	b1 81       	ldd	r27, Z+1	; 0x01
     208:	4e 91       	ld	r20, -X
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	9c 01       	movw	r18, r24
     210:	02 80       	ldd	r0, Z+2	; 0x02
     212:	02 c0       	rjmp	.+4      	; 0x218 <_ZN4GPIO14setInputPullUpEv+0x16>
     214:	22 0f       	add	r18, r18
     216:	33 1f       	adc	r19, r19
     218:	0a 94       	dec	r0
     21a:	e2 f7       	brpl	.-8      	; 0x214 <_ZN4GPIO14setInputPullUpEv+0x12>
     21c:	20 95       	com	r18
     21e:	24 23       	and	r18, r20
     220:	2c 93       	st	X, r18
	*(GPIO_ADD) |= (1<<pin);
     222:	a0 81       	ld	r26, Z
     224:	b1 81       	ldd	r27, Z+1	; 0x01
     226:	2c 91       	ld	r18, X
     228:	02 80       	ldd	r0, Z+2	; 0x02
     22a:	02 c0       	rjmp	.+4      	; 0x230 <_ZN4GPIO14setInputPullUpEv+0x2e>
     22c:	88 0f       	add	r24, r24
     22e:	99 1f       	adc	r25, r25
     230:	0a 94       	dec	r0
     232:	e2 f7       	brpl	.-8      	; 0x22c <_ZN4GPIO14setInputPullUpEv+0x2a>
     234:	82 2b       	or	r24, r18
     236:	8c 93       	st	X, r24
     238:	08 95       	ret

0000023a <_ZN4GPIO8getStateEv>:
}

bool GPIO::getState()
{
     23a:	fc 01       	movw	r30, r24
	return (*(GPIO_ADD-2) & (1<<pin)); //PIN register address is always PORT_reg_address-2 for respective ports
     23c:	a0 81       	ld	r26, Z
     23e:	b1 81       	ldd	r27, Z+1	; 0x01
     240:	12 97       	sbiw	r26, 0x02	; 2
     242:	8c 91       	ld	r24, X
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	02 80       	ldd	r0, Z+2	; 0x02
     248:	02 c0       	rjmp	.+4      	; 0x24e <_ZN4GPIO8getStateEv+0x14>
     24a:	95 95       	asr	r25
     24c:	87 95       	ror	r24
     24e:	0a 94       	dec	r0
     250:	e2 f7       	brpl	.-8      	; 0x24a <_ZN4GPIO8getStateEv+0x10>
}
     252:	81 70       	andi	r24, 0x01	; 1
     254:	08 95       	ret

00000256 <_ZN4GPIOC1Eh>:


GPIO::GPIO(uint8_t GPIO_PIN_NUM)
{
	parsePinMap(GPIO_PIN_NUM);
     256:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN4GPIO11parsePinMapEh>
     25a:	08 95       	ret

0000025c <_Z11powerTogglev>:
	
}

void powerToggle()
{
	ledBlue.toggle();
     25c:	83 e6       	ldi	r24, 0x63	; 99
     25e:	91 e0       	ldi	r25, 0x01	; 1
     260:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN4GPIO6toggleEv>
	powerFlag = !powerFlag;
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	90 91 48 01 	lds	r25, 0x0148
     26a:	91 11       	cpse	r25, r1
     26c:	80 e0       	ldi	r24, 0x00	; 0
     26e:	80 93 48 01 	sts	0x0148, r24
	if(powerFlag)				//statements to be executed only once on power-on
     272:	88 23       	and	r24, r24
     274:	39 f0       	breq	.+14     	; 0x284 <_Z11powerTogglev+0x28>
	{
		ledYellow.toggle();		//initial direction indication led.
     276:	89 e6       	ldi	r24, 0x69	; 105
     278:	91 e0       	ldi	r25, 0x01	; 1
     27a:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN4GPIO6toggleEv>
		soft_start_flag = 1;	//set the soft-start-flag
     27e:	81 e0       	ldi	r24, 0x01	; 1
     280:	80 93 01 01 	sts	0x0101, r24
     284:	08 95       	ret

00000286 <_Z9clockwisev>:
	
}

void clockwise()
{
	ledYellow.High();
     286:	89 e6       	ldi	r24, 0x69	; 105
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN4GPIO4HighEv>
	ledGreen.Low();
     28e:	86 e6       	ldi	r24, 0x66	; 102
     290:	91 e0       	ldi	r25, 0x01	; 1
     292:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	
	digitalWrite(MOTOR_PWM_2,LOW);		//if I use my own GPIO pin control functions then it goes mad, because my function doesn't take care
     296:	60 e0       	ldi	r22, 0x00	; 0
     298:	8b e0       	ldi	r24, 0x0B	; 11
     29a:	0e 94 df 04 	call	0x9be	; 0x9be <digitalWrite>
										//if any PWM is present on the pin but digitalWrite() takes that into account and disables the PWM 
										//accordingly.
	analogWrite(MOTOR_PWM_1,pwmValue);
     29e:	60 91 46 01 	lds	r22, 0x0146
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	8a e0       	ldi	r24, 0x0A	; 10
     2a6:	0e 94 40 04 	call	0x880	; 0x880 <analogWrite>
     2aa:	08 95       	ret

000002ac <_Z14anti_clockwisev>:
}

void anti_clockwise()
{
	ledYellow.Low();
     2ac:	89 e6       	ldi	r24, 0x69	; 105
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	ledGreen.High();
     2b4:	86 e6       	ldi	r24, 0x66	; 102
     2b6:	91 e0       	ldi	r25, 0x01	; 1
     2b8:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN4GPIO4HighEv>
	
	digitalWrite(MOTOR_PWM_1,LOW);
     2bc:	60 e0       	ldi	r22, 0x00	; 0
     2be:	8a e0       	ldi	r24, 0x0A	; 10
     2c0:	0e 94 df 04 	call	0x9be	; 0x9be <digitalWrite>
	analogWrite(MOTOR_PWM_2,pwmValue);
     2c4:	60 91 46 01 	lds	r22, 0x0146
     2c8:	70 e0       	ldi	r23, 0x00	; 0
     2ca:	8b e0       	ldi	r24, 0x0B	; 11
     2cc:	0e 94 40 04 	call	0x880	; 0x880 <analogWrite>
     2d0:	08 95       	ret

000002d2 <_Z15directionTogglev>:
}

void directionToggle()
{
	directionFlag = !directionFlag;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	90 91 47 01 	lds	r25, 0x0147
     2d8:	91 11       	cpse	r25, r1
     2da:	80 e0       	ldi	r24, 0x00	; 0
     2dc:	80 93 47 01 	sts	0x0147, r24
	soft_start_flag = 1;
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	80 93 01 01 	sts	0x0101, r24
     2e6:	08 95       	ret

000002e8 <loop>:

	return 0;
}

void loop()
{
     2e8:	af 92       	push	r10
     2ea:	bf 92       	push	r11
     2ec:	cf 92       	push	r12
     2ee:	df 92       	push	r13
     2f0:	ef 92       	push	r14
     2f2:	ff 92       	push	r15
     2f4:	0f 93       	push	r16
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
	
	if(!switch_1.getState() && millis()-sw1_last_click_time > BUTTON_DEBOUNCE_INTERVAL)
     2fa:	8d e5       	ldi	r24, 0x5D	; 93
     2fc:	91 e0       	ldi	r25, 0x01	; 1
     2fe:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN4GPIO8getStateEv>
     302:	81 11       	cpse	r24, r1
     304:	27 c0       	rjmp	.+78     	; 0x354 <loop+0x6c>
     306:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <millis>
     30a:	00 91 4d 01 	lds	r16, 0x014D
     30e:	10 91 4e 01 	lds	r17, 0x014E
     312:	20 91 4f 01 	lds	r18, 0x014F
     316:	30 91 50 01 	lds	r19, 0x0150
     31a:	dc 01       	movw	r26, r24
     31c:	cb 01       	movw	r24, r22
     31e:	80 1b       	sub	r24, r16
     320:	91 0b       	sbc	r25, r17
     322:	a2 0b       	sbc	r26, r18
     324:	b3 0b       	sbc	r27, r19
     326:	89 3c       	cpi	r24, 0xC9	; 201
     328:	91 05       	cpc	r25, r1
     32a:	a1 05       	cpc	r26, r1
     32c:	b1 05       	cpc	r27, r1
     32e:	90 f0       	brcs	.+36     	; 0x354 <loop+0x6c>
	{	
		powerToggle();
     330:	0e 94 2e 01 	call	0x25c	; 0x25c <_Z11powerTogglev>
		while(!switch_1.getState());	//wait until switch release.
     334:	8d e5       	ldi	r24, 0x5D	; 93
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN4GPIO8getStateEv>
     33c:	88 23       	and	r24, r24
     33e:	d1 f3       	breq	.-12     	; 0x334 <loop+0x4c>
		sw1_last_click_time = millis();
     340:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <millis>
     344:	60 93 4d 01 	sts	0x014D, r22
     348:	70 93 4e 01 	sts	0x014E, r23
     34c:	80 93 4f 01 	sts	0x014F, r24
     350:	90 93 50 01 	sts	0x0150, r25
	}
	
	
	if(powerFlag)	//main body code
     354:	80 91 48 01 	lds	r24, 0x0148
     358:	88 23       	and	r24, r24
     35a:	09 f4       	brne	.+2      	; 0x35e <loop+0x76>
     35c:	f6 c0       	rjmp	.+492    	; 0x54a <loop+0x262>
	{
		if(!switch_2.getState() && millis()-sw2_last_click_time > BUTTON_DEBOUNCE_INTERVAL)
     35e:	8a e5       	ldi	r24, 0x5A	; 90
     360:	91 e0       	ldi	r25, 0x01	; 1
     362:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN4GPIO8getStateEv>
     366:	81 11       	cpse	r24, r1
     368:	27 c0       	rjmp	.+78     	; 0x3b8 <loop+0xd0>
     36a:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <millis>
     36e:	00 91 49 01 	lds	r16, 0x0149
     372:	10 91 4a 01 	lds	r17, 0x014A
     376:	20 91 4b 01 	lds	r18, 0x014B
     37a:	30 91 4c 01 	lds	r19, 0x014C
     37e:	dc 01       	movw	r26, r24
     380:	cb 01       	movw	r24, r22
     382:	80 1b       	sub	r24, r16
     384:	91 0b       	sbc	r25, r17
     386:	a2 0b       	sbc	r26, r18
     388:	b3 0b       	sbc	r27, r19
     38a:	89 3c       	cpi	r24, 0xC9	; 201
     38c:	91 05       	cpc	r25, r1
     38e:	a1 05       	cpc	r26, r1
     390:	b1 05       	cpc	r27, r1
     392:	90 f0       	brcs	.+36     	; 0x3b8 <loop+0xd0>
		{
			directionToggle();
     394:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_Z15directionTogglev>
			while(!switch_2.getState());	//wait until switch released.
     398:	8a e5       	ldi	r24, 0x5A	; 90
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	0e 94 1d 01 	call	0x23a	; 0x23a <_ZN4GPIO8getStateEv>
     3a0:	88 23       	and	r24, r24
     3a2:	d1 f3       	breq	.-12     	; 0x398 <loop+0xb0>
			sw2_last_click_time = millis();
     3a4:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <millis>
     3a8:	60 93 49 01 	sts	0x0149, r22
     3ac:	70 93 4a 01 	sts	0x014A, r23
     3b0:	80 93 4b 01 	sts	0x014B, r24
     3b4:	90 93 4c 01 	sts	0x014C, r25
		}
		
		motorEnable.High();
     3b8:	81 e5       	ldi	r24, 0x51	; 81
     3ba:	91 e0       	ldi	r25, 0x01	; 1
     3bc:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN4GPIO4HighEv>
		
		
		
		if(soft_start_flag)
     3c0:	80 91 01 01 	lds	r24, 0x0101
     3c4:	88 23       	and	r24, r24
     3c6:	09 f4       	brne	.+2      	; 0x3ca <loop+0xe2>
     3c8:	55 c0       	rjmp	.+170    	; 0x474 <loop+0x18c>
		{
			uint8_t currentPwmVal = map(analogRead(POT),0,1023,0,255);
     3ca:	8e e0       	ldi	r24, 0x0E	; 14
     3cc:	0e 94 1e 04 	call	0x83c	; 0x83c <analogRead>
     3d0:	bc 01       	movw	r22, r24
     3d2:	88 27       	eor	r24, r24
     3d4:	77 fd       	sbrc	r23, 7
     3d6:	80 95       	com	r24
     3d8:	98 2f       	mov	r25, r24
     3da:	1f 92       	push	r1
     3dc:	1f 92       	push	r1
     3de:	1f 92       	push	r1
     3e0:	2f ef       	ldi	r18, 0xFF	; 255
     3e2:	2f 93       	push	r18
     3e4:	a1 2c       	mov	r10, r1
     3e6:	b1 2c       	mov	r11, r1
     3e8:	65 01       	movw	r12, r10
     3ea:	ee 24       	eor	r14, r14
     3ec:	ea 94       	dec	r14
     3ee:	13 e0       	ldi	r17, 0x03	; 3
     3f0:	f1 2e       	mov	r15, r17
     3f2:	00 e0       	ldi	r16, 0x00	; 0
     3f4:	10 e0       	ldi	r17, 0x00	; 0
     3f6:	20 e0       	ldi	r18, 0x00	; 0
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	a9 01       	movw	r20, r18
     3fc:	0e 94 51 08 	call	0x10a2	; 0x10a2 <_Z3maplllll>
     400:	c6 2f       	mov	r28, r22
			
			if(incrementer < currentPwmVal && millis() - softStartInterval > STARTUP_INTERVAL_DELAY)
     402:	0f 90       	pop	r0
     404:	0f 90       	pop	r0
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	80 91 00 01 	lds	r24, 0x0100
     40e:	8c 17       	cp	r24, r28
     410:	58 f5       	brcc	.+86     	; 0x468 <loop+0x180>
     412:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <millis>
     416:	00 91 42 01 	lds	r16, 0x0142
     41a:	10 91 43 01 	lds	r17, 0x0143
     41e:	20 91 44 01 	lds	r18, 0x0144
     422:	30 91 45 01 	lds	r19, 0x0145
     426:	dc 01       	movw	r26, r24
     428:	cb 01       	movw	r24, r22
     42a:	80 1b       	sub	r24, r16
     42c:	91 0b       	sbc	r25, r17
     42e:	a2 0b       	sbc	r26, r18
     430:	b3 0b       	sbc	r27, r19
     432:	85 36       	cpi	r24, 0x65	; 101
     434:	91 05       	cpc	r25, r1
     436:	a1 05       	cpc	r26, r1
     438:	b1 05       	cpc	r27, r1
     43a:	90 f0       	brcs	.+36     	; 0x460 <loop+0x178>
			{
				incrementer+=10;
     43c:	80 91 00 01 	lds	r24, 0x0100
     440:	86 5f       	subi	r24, 0xF6	; 246
     442:	80 93 00 01 	sts	0x0100, r24
				pwmValue = incrementer;
     446:	80 93 46 01 	sts	0x0146, r24
				softStartInterval = millis();
     44a:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <millis>
     44e:	60 93 42 01 	sts	0x0142, r22
     452:	70 93 43 01 	sts	0x0143, r23
     456:	80 93 44 01 	sts	0x0144, r24
     45a:	90 93 45 01 	sts	0x0145, r25
     45e:	2b c0       	rjmp	.+86     	; 0x4b6 <loop+0x1ce>
			}
			
			else if(incrementer >= currentPwmVal)
     460:	80 91 00 01 	lds	r24, 0x0100
     464:	8c 17       	cp	r24, r28
     466:	38 f1       	brcs	.+78     	; 0x4b6 <loop+0x1ce>
			{	
				soft_start_flag = 0;
     468:	10 92 01 01 	sts	0x0101, r1
				incrementer = INCREMENTER_INIT_VALUE;
     46c:	82 e3       	ldi	r24, 0x32	; 50
     46e:	80 93 00 01 	sts	0x0100, r24
     472:	21 c0       	rjmp	.+66     	; 0x4b6 <loop+0x1ce>
			}
		}
		
		else
		{
			pwmValue = map(analogRead(POT),0,1023,0,255);
     474:	8e e0       	ldi	r24, 0x0E	; 14
     476:	0e 94 1e 04 	call	0x83c	; 0x83c <analogRead>
     47a:	bc 01       	movw	r22, r24
     47c:	88 27       	eor	r24, r24
     47e:	77 fd       	sbrc	r23, 7
     480:	80 95       	com	r24
     482:	98 2f       	mov	r25, r24
     484:	1f 92       	push	r1
     486:	1f 92       	push	r1
     488:	1f 92       	push	r1
     48a:	2f ef       	ldi	r18, 0xFF	; 255
     48c:	2f 93       	push	r18
     48e:	a1 2c       	mov	r10, r1
     490:	b1 2c       	mov	r11, r1
     492:	65 01       	movw	r12, r10
     494:	ee 24       	eor	r14, r14
     496:	ea 94       	dec	r14
     498:	13 e0       	ldi	r17, 0x03	; 3
     49a:	f1 2e       	mov	r15, r17
     49c:	00 e0       	ldi	r16, 0x00	; 0
     49e:	10 e0       	ldi	r17, 0x00	; 0
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	a9 01       	movw	r20, r18
     4a6:	0e 94 51 08 	call	0x10a2	; 0x10a2 <_Z3maplllll>
     4aa:	60 93 46 01 	sts	0x0146, r22
     4ae:	0f 90       	pop	r0
     4b0:	0f 90       	pop	r0
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
		}
		
		
		if(!directionFlag)
     4b6:	80 91 47 01 	lds	r24, 0x0147
     4ba:	81 11       	cpse	r24, r1
     4bc:	03 c0       	rjmp	.+6      	; 0x4c4 <loop+0x1dc>
			clockwise();
     4be:	0e 94 43 01 	call	0x286	; 0x286 <_Z9clockwisev>
     4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <loop+0x1e0>
		else
			anti_clockwise();
     4c4:	0e 94 56 01 	call	0x2ac	; 0x2ac <_Z14anti_clockwisev>
		
		Serial.println(analogRead(SHUNT_RES));
     4c8:	8f e0       	ldi	r24, 0x0F	; 15
     4ca:	0e 94 1e 04 	call	0x83c	; 0x83c <analogRead>
     4ce:	4a e0       	ldi	r20, 0x0A	; 10
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	bc 01       	movw	r22, r24
     4d4:	8d ef       	ldi	r24, 0xFD	; 253
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	0e 94 1f 08 	call	0x103e	; 0x103e <_ZN5Print7printlnEii>
		
		if(analogRead(SHUNT_RES)>=14)
     4dc:	8f e0       	ldi	r24, 0x0F	; 15
     4de:	0e 94 1e 04 	call	0x83c	; 0x83c <analogRead>
     4e2:	0e 97       	sbiw	r24, 0x0e	; 14
     4e4:	4c f1       	brlt	.+82     	; 0x538 <loop+0x250>
		{
		//	uint32_t startCheck = millis();
			Serial.println("OverCurrent_detected");
     4e6:	63 e0       	ldi	r22, 0x03	; 3
     4e8:	71 e0       	ldi	r23, 0x01	; 1
     4ea:	8d ef       	ldi	r24, 0xFD	; 253
     4ec:	91 e0       	ldi	r25, 0x01	; 1
     4ee:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN5Print7printlnEPKc>
				motorEnable.Low();
				delay(1000);
			}
		*/
			
			delay(400);
     4f2:	60 e9       	ldi	r22, 0x90	; 144
     4f4:	71 e0       	ldi	r23, 0x01	; 1
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	0e 94 8a 03 	call	0x714	; 0x714 <delay>
			if(analogRead(SHUNT_RES)>=14)
     4fe:	8f e0       	ldi	r24, 0x0F	; 15
     500:	0e 94 1e 04 	call	0x83c	; 0x83c <analogRead>
     504:	0e 97       	sbiw	r24, 0x0e	; 14
     506:	cc f1       	brlt	.+114    	; 0x57a <loop+0x292>
			{
				ledRed.High();
     508:	80 e6       	ldi	r24, 0x60	; 96
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN4GPIO4HighEv>
				Serial.println("stop");
     510:	68 e1       	ldi	r22, 0x18	; 24
     512:	71 e0       	ldi	r23, 0x01	; 1
     514:	8d ef       	ldi	r24, 0xFD	; 253
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN5Print7printlnEPKc>
				motorEnable.Low();
     51c:	81 e5       	ldi	r24, 0x51	; 81
     51e:	91 e0       	ldi	r25, 0x01	; 1
     520:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
				delay(2000);
     524:	60 ed       	ldi	r22, 0xD0	; 208
     526:	77 e0       	ldi	r23, 0x07	; 7
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	0e 94 8a 03 	call	0x714	; 0x714 <delay>
				soft_start_flag=1;
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	80 93 01 01 	sts	0x0101, r24
     536:	21 c0       	rjmp	.+66     	; 0x57a <loop+0x292>
			
		}
		else
		{
			//soft_start_flag = 1;
			motorEnable.High();
     538:	81 e5       	ldi	r24, 0x51	; 81
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	0e 94 be 00 	call	0x17c	; 0x17c <_ZN4GPIO4HighEv>
			ledRed.Low();
     540:	80 e6       	ldi	r24, 0x60	; 96
     542:	91 e0       	ldi	r25, 0x01	; 1
     544:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
     548:	18 c0       	rjmp	.+48     	; 0x57a <loop+0x292>
		}
	}
	else
	{
		//power down all , blue led is controlled in powerToggle().
		motorEnable.Low();
     54a:	81 e5       	ldi	r24, 0x51	; 81
     54c:	91 e0       	ldi	r25, 0x01	; 1
     54e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
		ledRed.Low();
     552:	80 e6       	ldi	r24, 0x60	; 96
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
		ledGreen.Low();
     55a:	86 e6       	ldi	r24, 0x66	; 102
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
		ledYellow.Low();
     562:	89 e6       	ldi	r24, 0x69	; 105
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
		digitalWrite(MOTOR_PWM_1,LOW);
     56a:	60 e0       	ldi	r22, 0x00	; 0
     56c:	8a e0       	ldi	r24, 0x0A	; 10
     56e:	0e 94 df 04 	call	0x9be	; 0x9be <digitalWrite>
		digitalWrite(MOTOR_PWM_2,LOW);
     572:	60 e0       	ldi	r22, 0x00	; 0
     574:	8b e0       	ldi	r24, 0x0B	; 11
     576:	0e 94 df 04 	call	0x9be	; 0x9be <digitalWrite>
	}
	
}
     57a:	cf 91       	pop	r28
     57c:	1f 91       	pop	r17
     57e:	0f 91       	pop	r16
     580:	ff 90       	pop	r15
     582:	ef 90       	pop	r14
     584:	df 90       	pop	r13
     586:	cf 90       	pop	r12
     588:	bf 90       	pop	r11
     58a:	af 90       	pop	r10
     58c:	08 95       	ret

0000058e <main>:
uint8_t incrementer = INCREMENTER_INIT_VALUE;
uint32_t softStartInterval = 0;

int main(void)
{
	init();		//Initialize arduino core library functions/peripherals.
     58e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <init>

	Serial.begin(57600);
     592:	40 e0       	ldi	r20, 0x00	; 0
     594:	51 ee       	ldi	r21, 0xE1	; 225
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	70 e0       	ldi	r23, 0x00	; 0
     59a:	8d ef       	ldi	r24, 0xFD	; 253
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	0e 94 a2 05 	call	0xb44	; 0xb44 <_ZN14HardwareSerial5beginEm>
	
	//analogReference(INTERNAL);  //set to 1.1VBG set by my adc_init()
	//adc_init();	//we have a problem now that if we use internal 1.1v then how will we read POT value properly
					//since it will swing across VCC-GND
	
	pinMode(POT,INPUT);
     5a2:	60 e0       	ldi	r22, 0x00	; 0
     5a4:	8e e0       	ldi	r24, 0x0E	; 14
     5a6:	0e 94 a0 04 	call	0x940	; 0x940 <pinMode>
	pinMode(SHUNT_RES,INPUT);
     5aa:	60 e0       	ldi	r22, 0x00	; 0
     5ac:	8f e0       	ldi	r24, 0x0F	; 15
     5ae:	0e 94 a0 04 	call	0x940	; 0x940 <pinMode>
	
	motorEnable.Low();
     5b2:	81 e5       	ldi	r24, 0x51	; 81
     5b4:	91 e0       	ldi	r25, 0x01	; 1
     5b6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	motorPWM_1.Low();
     5ba:	87 e5       	ldi	r24, 0x57	; 87
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	motorPWM_2.Low();
     5c2:	84 e5       	ldi	r24, 0x54	; 84
     5c4:	91 e0       	ldi	r25, 0x01	; 1
     5c6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	
	ledBlue.Low();
     5ca:	83 e6       	ldi	r24, 0x63	; 99
     5cc:	91 e0       	ldi	r25, 0x01	; 1
     5ce:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	ledRed.Low();
     5d2:	80 e6       	ldi	r24, 0x60	; 96
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	ledGreen.Low();
     5da:	86 e6       	ldi	r24, 0x66	; 102
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	ledYellow.Low();
     5e2:	89 e6       	ldi	r24, 0x69	; 105
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_ZN4GPIO3LowEv>
	
	switch_1.setInputPullUp();
     5ea:	8d e5       	ldi	r24, 0x5D	; 93
     5ec:	91 e0       	ldi	r25, 0x01	; 1
     5ee:	0e 94 01 01 	call	0x202	; 0x202 <_ZN4GPIO14setInputPullUpEv>
	switch_2.setInputPullUp();
     5f2:	8a e5       	ldi	r24, 0x5A	; 90
     5f4:	91 e0       	ldi	r25, 0x01	; 1
     5f6:	0e 94 01 01 	call	0x202	; 0x202 <_ZN4GPIO14setInputPullUpEv>
	
	Serial.println("Program Initialized");
     5fa:	6d e1       	ldi	r22, 0x1D	; 29
     5fc:	71 e0       	ldi	r23, 0x01	; 1
     5fe:	8d ef       	ldi	r24, 0xFD	; 253
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN5Print7printlnEPKc>
	
	while(1)
	{
		
	loop();
     606:	0e 94 74 01 	call	0x2e8	; 0x2e8 <loop>
     60a:	fd cf       	rjmp	.-6      	; 0x606 <main+0x78>

0000060c <_GLOBAL__sub_I_stack>:

#define MOTOR_PWM_1		10
#define MOTOR_PWM_2		11
#define MOTOR_ENABLE	12

	GPIO ledYellow(LED_YELLOW);
     60c:	65 e0       	ldi	r22, 0x05	; 5
     60e:	89 e6       	ldi	r24, 0x69	; 105
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	GPIO ledGreen(LED_GREEN);
     616:	64 e0       	ldi	r22, 0x04	; 4
     618:	86 e6       	ldi	r24, 0x66	; 102
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	GPIO ledBlue(LED_BLUE);
     620:	63 e0       	ldi	r22, 0x03	; 3
     622:	83 e6       	ldi	r24, 0x63	; 99
     624:	91 e0       	ldi	r25, 0x01	; 1
     626:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	GPIO ledRed(LED_RED);
     62a:	62 e0       	ldi	r22, 0x02	; 2
     62c:	80 e6       	ldi	r24, 0x60	; 96
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	
	GPIO switch_1(SW_1);
     634:	68 e0       	ldi	r22, 0x08	; 8
     636:	8d e5       	ldi	r24, 0x5D	; 93
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	GPIO switch_2(SW_2);
     63e:	69 e0       	ldi	r22, 0x09	; 9
     640:	8a e5       	ldi	r24, 0x5A	; 90
     642:	91 e0       	ldi	r25, 0x01	; 1
     644:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	
	GPIO motorPWM_1(MOTOR_PWM_1);
     648:	6a e0       	ldi	r22, 0x0A	; 10
     64a:	87 e5       	ldi	r24, 0x57	; 87
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	GPIO motorPWM_2(MOTOR_PWM_2);
     652:	6b e0       	ldi	r22, 0x0B	; 11
     654:	84 e5       	ldi	r24, 0x54	; 84
     656:	91 e0       	ldi	r25, 0x01	; 1
     658:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
	GPIO motorEnable(MOTOR_ENABLE);
     65c:	6c e0       	ldi	r22, 0x0C	; 12
     65e:	81 e5       	ldi	r24, 0x51	; 81
     660:	91 e0       	ldi	r25, 0x01	; 1
     662:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4GPIOC1Eh>
     666:	08 95       	ret

00000668 <__vector_16>:
     668:	1f 92       	push	r1
     66a:	0f 92       	push	r0
     66c:	0f b6       	in	r0, 0x3f	; 63
     66e:	0f 92       	push	r0
     670:	11 24       	eor	r1, r1
     672:	2f 93       	push	r18
     674:	3f 93       	push	r19
     676:	8f 93       	push	r24
     678:	9f 93       	push	r25
     67a:	af 93       	push	r26
     67c:	bf 93       	push	r27
     67e:	80 91 70 01 	lds	r24, 0x0170
     682:	90 91 71 01 	lds	r25, 0x0171
     686:	a0 91 72 01 	lds	r26, 0x0172
     68a:	b0 91 73 01 	lds	r27, 0x0173
     68e:	30 91 74 01 	lds	r19, 0x0174
     692:	01 96       	adiw	r24, 0x01	; 1
     694:	a1 1d       	adc	r26, r1
     696:	b1 1d       	adc	r27, r1
     698:	23 2f       	mov	r18, r19
     69a:	2d 5f       	subi	r18, 0xFD	; 253
     69c:	2d 37       	cpi	r18, 0x7D	; 125
     69e:	20 f0       	brcs	.+8      	; 0x6a8 <__vector_16+0x40>
     6a0:	2d 57       	subi	r18, 0x7D	; 125
     6a2:	01 96       	adiw	r24, 0x01	; 1
     6a4:	a1 1d       	adc	r26, r1
     6a6:	b1 1d       	adc	r27, r1
     6a8:	20 93 74 01 	sts	0x0174, r18
     6ac:	80 93 70 01 	sts	0x0170, r24
     6b0:	90 93 71 01 	sts	0x0171, r25
     6b4:	a0 93 72 01 	sts	0x0172, r26
     6b8:	b0 93 73 01 	sts	0x0173, r27
     6bc:	80 91 6c 01 	lds	r24, 0x016C
     6c0:	90 91 6d 01 	lds	r25, 0x016D
     6c4:	a0 91 6e 01 	lds	r26, 0x016E
     6c8:	b0 91 6f 01 	lds	r27, 0x016F
     6cc:	01 96       	adiw	r24, 0x01	; 1
     6ce:	a1 1d       	adc	r26, r1
     6d0:	b1 1d       	adc	r27, r1
     6d2:	80 93 6c 01 	sts	0x016C, r24
     6d6:	90 93 6d 01 	sts	0x016D, r25
     6da:	a0 93 6e 01 	sts	0x016E, r26
     6de:	b0 93 6f 01 	sts	0x016F, r27
     6e2:	bf 91       	pop	r27
     6e4:	af 91       	pop	r26
     6e6:	9f 91       	pop	r25
     6e8:	8f 91       	pop	r24
     6ea:	3f 91       	pop	r19
     6ec:	2f 91       	pop	r18
     6ee:	0f 90       	pop	r0
     6f0:	0f be       	out	0x3f, r0	; 63
     6f2:	0f 90       	pop	r0
     6f4:	1f 90       	pop	r1
     6f6:	18 95       	reti

000006f8 <millis>:
     6f8:	8f b7       	in	r24, 0x3f	; 63
     6fa:	f8 94       	cli
     6fc:	20 91 70 01 	lds	r18, 0x0170
     700:	30 91 71 01 	lds	r19, 0x0171
     704:	40 91 72 01 	lds	r20, 0x0172
     708:	50 91 73 01 	lds	r21, 0x0173
     70c:	8f bf       	out	0x3f, r24	; 63
     70e:	b9 01       	movw	r22, r18
     710:	ca 01       	movw	r24, r20
     712:	08 95       	ret

00000714 <delay>:
     714:	9b 01       	movw	r18, r22
     716:	ac 01       	movw	r20, r24
     718:	7f b7       	in	r23, 0x3f	; 63
     71a:	f8 94       	cli
     71c:	80 91 6c 01 	lds	r24, 0x016C
     720:	90 91 6d 01 	lds	r25, 0x016D
     724:	a0 91 6e 01 	lds	r26, 0x016E
     728:	b0 91 6f 01 	lds	r27, 0x016F
     72c:	66 b5       	in	r22, 0x26	; 38
     72e:	a8 9b       	sbis	0x15, 0	; 21
     730:	05 c0       	rjmp	.+10     	; 0x73c <delay+0x28>
     732:	6f 3f       	cpi	r22, 0xFF	; 255
     734:	19 f0       	breq	.+6      	; 0x73c <delay+0x28>
     736:	01 96       	adiw	r24, 0x01	; 1
     738:	a1 1d       	adc	r26, r1
     73a:	b1 1d       	adc	r27, r1
     73c:	7f bf       	out	0x3f, r23	; 63
     73e:	ba 2f       	mov	r27, r26
     740:	a9 2f       	mov	r26, r25
     742:	98 2f       	mov	r25, r24
     744:	88 27       	eor	r24, r24
     746:	86 0f       	add	r24, r22
     748:	91 1d       	adc	r25, r1
     74a:	a1 1d       	adc	r26, r1
     74c:	b1 1d       	adc	r27, r1
     74e:	62 e0       	ldi	r22, 0x02	; 2
     750:	88 0f       	add	r24, r24
     752:	99 1f       	adc	r25, r25
     754:	aa 1f       	adc	r26, r26
     756:	bb 1f       	adc	r27, r27
     758:	6a 95       	dec	r22
     75a:	d1 f7       	brne	.-12     	; 0x750 <delay+0x3c>
     75c:	bc 01       	movw	r22, r24
     75e:	2d c0       	rjmp	.+90     	; 0x7ba <delay+0xa6>
     760:	ff b7       	in	r31, 0x3f	; 63
     762:	f8 94       	cli
     764:	80 91 6c 01 	lds	r24, 0x016C
     768:	90 91 6d 01 	lds	r25, 0x016D
     76c:	a0 91 6e 01 	lds	r26, 0x016E
     770:	b0 91 6f 01 	lds	r27, 0x016F
     774:	e6 b5       	in	r30, 0x26	; 38
     776:	a8 9b       	sbis	0x15, 0	; 21
     778:	05 c0       	rjmp	.+10     	; 0x784 <delay+0x70>
     77a:	ef 3f       	cpi	r30, 0xFF	; 255
     77c:	19 f0       	breq	.+6      	; 0x784 <delay+0x70>
     77e:	01 96       	adiw	r24, 0x01	; 1
     780:	a1 1d       	adc	r26, r1
     782:	b1 1d       	adc	r27, r1
     784:	ff bf       	out	0x3f, r31	; 63
     786:	ba 2f       	mov	r27, r26
     788:	a9 2f       	mov	r26, r25
     78a:	98 2f       	mov	r25, r24
     78c:	88 27       	eor	r24, r24
     78e:	8e 0f       	add	r24, r30
     790:	91 1d       	adc	r25, r1
     792:	a1 1d       	adc	r26, r1
     794:	b1 1d       	adc	r27, r1
     796:	e2 e0       	ldi	r30, 0x02	; 2
     798:	88 0f       	add	r24, r24
     79a:	99 1f       	adc	r25, r25
     79c:	aa 1f       	adc	r26, r26
     79e:	bb 1f       	adc	r27, r27
     7a0:	ea 95       	dec	r30
     7a2:	d1 f7       	brne	.-12     	; 0x798 <delay+0x84>
     7a4:	86 1b       	sub	r24, r22
     7a6:	97 0b       	sbc	r25, r23
     7a8:	88 5e       	subi	r24, 0xE8	; 232
     7aa:	93 40       	sbci	r25, 0x03	; 3
     7ac:	c8 f2       	brcs	.-78     	; 0x760 <delay+0x4c>
     7ae:	21 50       	subi	r18, 0x01	; 1
     7b0:	30 40       	sbci	r19, 0x00	; 0
     7b2:	40 40       	sbci	r20, 0x00	; 0
     7b4:	50 40       	sbci	r21, 0x00	; 0
     7b6:	68 51       	subi	r22, 0x18	; 24
     7b8:	7c 4f       	sbci	r23, 0xFC	; 252
     7ba:	21 15       	cp	r18, r1
     7bc:	31 05       	cpc	r19, r1
     7be:	41 05       	cpc	r20, r1
     7c0:	51 05       	cpc	r21, r1
     7c2:	71 f6       	brne	.-100    	; 0x760 <delay+0x4c>
     7c4:	08 95       	ret

000007c6 <init>:
     7c6:	78 94       	sei
     7c8:	84 b5       	in	r24, 0x24	; 36
     7ca:	82 60       	ori	r24, 0x02	; 2
     7cc:	84 bd       	out	0x24, r24	; 36
     7ce:	84 b5       	in	r24, 0x24	; 36
     7d0:	81 60       	ori	r24, 0x01	; 1
     7d2:	84 bd       	out	0x24, r24	; 36
     7d4:	85 b5       	in	r24, 0x25	; 37
     7d6:	82 60       	ori	r24, 0x02	; 2
     7d8:	85 bd       	out	0x25, r24	; 37
     7da:	85 b5       	in	r24, 0x25	; 37
     7dc:	81 60       	ori	r24, 0x01	; 1
     7de:	85 bd       	out	0x25, r24	; 37
     7e0:	ee e6       	ldi	r30, 0x6E	; 110
     7e2:	f0 e0       	ldi	r31, 0x00	; 0
     7e4:	80 81       	ld	r24, Z
     7e6:	81 60       	ori	r24, 0x01	; 1
     7e8:	80 83       	st	Z, r24
     7ea:	e1 e8       	ldi	r30, 0x81	; 129
     7ec:	f0 e0       	ldi	r31, 0x00	; 0
     7ee:	10 82       	st	Z, r1
     7f0:	80 81       	ld	r24, Z
     7f2:	82 60       	ori	r24, 0x02	; 2
     7f4:	80 83       	st	Z, r24
     7f6:	80 81       	ld	r24, Z
     7f8:	81 60       	ori	r24, 0x01	; 1
     7fa:	80 83       	st	Z, r24
     7fc:	e0 e8       	ldi	r30, 0x80	; 128
     7fe:	f0 e0       	ldi	r31, 0x00	; 0
     800:	80 81       	ld	r24, Z
     802:	81 60       	ori	r24, 0x01	; 1
     804:	80 83       	st	Z, r24
     806:	e1 eb       	ldi	r30, 0xB1	; 177
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	80 81       	ld	r24, Z
     80c:	84 60       	ori	r24, 0x04	; 4
     80e:	80 83       	st	Z, r24
     810:	e0 eb       	ldi	r30, 0xB0	; 176
     812:	f0 e0       	ldi	r31, 0x00	; 0
     814:	80 81       	ld	r24, Z
     816:	81 60       	ori	r24, 0x01	; 1
     818:	80 83       	st	Z, r24
     81a:	ea e7       	ldi	r30, 0x7A	; 122
     81c:	f0 e0       	ldi	r31, 0x00	; 0
     81e:	80 81       	ld	r24, Z
     820:	84 60       	ori	r24, 0x04	; 4
     822:	80 83       	st	Z, r24
     824:	80 81       	ld	r24, Z
     826:	82 60       	ori	r24, 0x02	; 2
     828:	80 83       	st	Z, r24
     82a:	80 81       	ld	r24, Z
     82c:	81 60       	ori	r24, 0x01	; 1
     82e:	80 83       	st	Z, r24
     830:	80 81       	ld	r24, Z
     832:	80 68       	ori	r24, 0x80	; 128
     834:	80 83       	st	Z, r24
     836:	10 92 c1 00 	sts	0x00C1, r1
     83a:	08 95       	ret

0000083c <analogRead>:
     83c:	98 2f       	mov	r25, r24
     83e:	8e 30       	cpi	r24, 0x0E	; 14
     840:	08 f0       	brcs	.+2      	; 0x844 <analogRead+0x8>
     842:	9e 50       	subi	r25, 0x0E	; 14
     844:	97 70       	andi	r25, 0x07	; 7
     846:	80 91 02 01 	lds	r24, 0x0102
     84a:	82 95       	swap	r24
     84c:	88 0f       	add	r24, r24
     84e:	88 0f       	add	r24, r24
     850:	80 7c       	andi	r24, 0xC0	; 192
     852:	89 2b       	or	r24, r25
     854:	80 93 7c 00 	sts	0x007C, r24
     858:	80 91 7a 00 	lds	r24, 0x007A
     85c:	80 64       	ori	r24, 0x40	; 64
     85e:	80 93 7a 00 	sts	0x007A, r24
     862:	80 91 7a 00 	lds	r24, 0x007A
     866:	86 fd       	sbrc	r24, 6
     868:	fc cf       	rjmp	.-8      	; 0x862 <analogRead+0x26>
     86a:	20 91 78 00 	lds	r18, 0x0078
     86e:	40 91 79 00 	lds	r20, 0x0079
     872:	94 2f       	mov	r25, r20
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	28 2b       	or	r18, r24
     87a:	39 2b       	or	r19, r25
     87c:	c9 01       	movw	r24, r18
     87e:	08 95       	ret

00000880 <analogWrite>:
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	18 2f       	mov	r17, r24
     888:	eb 01       	movw	r28, r22
     88a:	61 e0       	ldi	r22, 0x01	; 1
     88c:	0e 94 a0 04 	call	0x940	; 0x940 <pinMode>
     890:	20 97       	sbiw	r28, 0x00	; 0
     892:	09 f4       	brne	.+2      	; 0x896 <analogWrite+0x16>
     894:	4a c0       	rjmp	.+148    	; 0x92a <__stack+0x2b>
     896:	cf 3f       	cpi	r28, 0xFF	; 255
     898:	d1 05       	cpc	r29, r1
     89a:	09 f4       	brne	.+2      	; 0x89e <analogWrite+0x1e>
     89c:	49 c0       	rjmp	.+146    	; 0x930 <__stack+0x31>
     89e:	e1 2f       	mov	r30, r17
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	e2 55       	subi	r30, 0x52	; 82
     8a4:	ff 4f       	sbci	r31, 0xFF	; 255
     8a6:	84 91       	lpm	r24, Z
     8a8:	83 30       	cpi	r24, 0x03	; 3
     8aa:	c1 f0       	breq	.+48     	; 0x8dc <analogWrite+0x5c>
     8ac:	84 30       	cpi	r24, 0x04	; 4
     8ae:	28 f4       	brcc	.+10     	; 0x8ba <analogWrite+0x3a>
     8b0:	81 30       	cpi	r24, 0x01	; 1
     8b2:	51 f0       	breq	.+20     	; 0x8c8 <analogWrite+0x48>
     8b4:	82 30       	cpi	r24, 0x02	; 2
     8b6:	b1 f5       	brne	.+108    	; 0x924 <__stack+0x25>
     8b8:	0c c0       	rjmp	.+24     	; 0x8d2 <analogWrite+0x52>
     8ba:	86 30       	cpi	r24, 0x06	; 6
     8bc:	19 f1       	breq	.+70     	; 0x904 <__stack+0x5>
     8be:	87 30       	cpi	r24, 0x07	; 7
     8c0:	49 f1       	breq	.+82     	; 0x914 <__stack+0x15>
     8c2:	84 30       	cpi	r24, 0x04	; 4
     8c4:	79 f5       	brne	.+94     	; 0x924 <__stack+0x25>
     8c6:	14 c0       	rjmp	.+40     	; 0x8f0 <analogWrite+0x70>
     8c8:	84 b5       	in	r24, 0x24	; 36
     8ca:	80 68       	ori	r24, 0x80	; 128
     8cc:	84 bd       	out	0x24, r24	; 36
     8ce:	c7 bd       	out	0x27, r28	; 39
     8d0:	33 c0       	rjmp	.+102    	; 0x938 <__stack+0x39>
     8d2:	84 b5       	in	r24, 0x24	; 36
     8d4:	80 62       	ori	r24, 0x20	; 32
     8d6:	84 bd       	out	0x24, r24	; 36
     8d8:	c8 bd       	out	0x28, r28	; 40
     8da:	2e c0       	rjmp	.+92     	; 0x938 <__stack+0x39>
     8dc:	80 91 80 00 	lds	r24, 0x0080
     8e0:	80 68       	ori	r24, 0x80	; 128
     8e2:	80 93 80 00 	sts	0x0080, r24
     8e6:	d0 93 89 00 	sts	0x0089, r29
     8ea:	c0 93 88 00 	sts	0x0088, r28
     8ee:	24 c0       	rjmp	.+72     	; 0x938 <__stack+0x39>
     8f0:	80 91 80 00 	lds	r24, 0x0080
     8f4:	80 62       	ori	r24, 0x20	; 32
     8f6:	80 93 80 00 	sts	0x0080, r24
     8fa:	d0 93 8b 00 	sts	0x008B, r29
     8fe:	c0 93 8a 00 	sts	0x008A, r28
     902:	1a c0       	rjmp	.+52     	; 0x938 <__stack+0x39>
     904:	80 91 b0 00 	lds	r24, 0x00B0
     908:	80 68       	ori	r24, 0x80	; 128
     90a:	80 93 b0 00 	sts	0x00B0, r24
     90e:	c0 93 b3 00 	sts	0x00B3, r28
     912:	12 c0       	rjmp	.+36     	; 0x938 <__stack+0x39>
     914:	80 91 b0 00 	lds	r24, 0x00B0
     918:	80 62       	ori	r24, 0x20	; 32
     91a:	80 93 b0 00 	sts	0x00B0, r24
     91e:	c0 93 b4 00 	sts	0x00B4, r28
     922:	0a c0       	rjmp	.+20     	; 0x938 <__stack+0x39>
     924:	c0 38       	cpi	r28, 0x80	; 128
     926:	d1 05       	cpc	r29, r1
     928:	1c f4       	brge	.+6      	; 0x930 <__stack+0x31>
     92a:	81 2f       	mov	r24, r17
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	02 c0       	rjmp	.+4      	; 0x934 <__stack+0x35>
     930:	81 2f       	mov	r24, r17
     932:	61 e0       	ldi	r22, 0x01	; 1
     934:	0e 94 df 04 	call	0x9be	; 0x9be <digitalWrite>
     938:	df 91       	pop	r29
     93a:	cf 91       	pop	r28
     93c:	1f 91       	pop	r17
     93e:	08 95       	ret

00000940 <pinMode>:
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
     944:	48 2f       	mov	r20, r24
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	ca 01       	movw	r24, r20
     94a:	86 56       	subi	r24, 0x66	; 102
     94c:	9f 4f       	sbci	r25, 0xFF	; 255
     94e:	fc 01       	movw	r30, r24
     950:	34 91       	lpm	r19, Z
     952:	4a 57       	subi	r20, 0x7A	; 122
     954:	5f 4f       	sbci	r21, 0xFF	; 255
     956:	fa 01       	movw	r30, r20
     958:	84 91       	lpm	r24, Z
     95a:	88 23       	and	r24, r24
     95c:	69 f1       	breq	.+90     	; 0x9b8 <pinMode+0x78>
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	88 0f       	add	r24, r24
     962:	99 1f       	adc	r25, r25
     964:	fc 01       	movw	r30, r24
     966:	e8 59       	subi	r30, 0x98	; 152
     968:	ff 4f       	sbci	r31, 0xFF	; 255
     96a:	a5 91       	lpm	r26, Z+
     96c:	b4 91       	lpm	r27, Z
     96e:	fc 01       	movw	r30, r24
     970:	ee 58       	subi	r30, 0x8E	; 142
     972:	ff 4f       	sbci	r31, 0xFF	; 255
     974:	c5 91       	lpm	r28, Z+
     976:	d4 91       	lpm	r29, Z
     978:	66 23       	and	r22, r22
     97a:	51 f4       	brne	.+20     	; 0x990 <pinMode+0x50>
     97c:	2f b7       	in	r18, 0x3f	; 63
     97e:	f8 94       	cli
     980:	8c 91       	ld	r24, X
     982:	93 2f       	mov	r25, r19
     984:	90 95       	com	r25
     986:	89 23       	and	r24, r25
     988:	8c 93       	st	X, r24
     98a:	88 81       	ld	r24, Y
     98c:	89 23       	and	r24, r25
     98e:	0b c0       	rjmp	.+22     	; 0x9a6 <pinMode+0x66>
     990:	62 30       	cpi	r22, 0x02	; 2
     992:	61 f4       	brne	.+24     	; 0x9ac <pinMode+0x6c>
     994:	2f b7       	in	r18, 0x3f	; 63
     996:	f8 94       	cli
     998:	8c 91       	ld	r24, X
     99a:	93 2f       	mov	r25, r19
     99c:	90 95       	com	r25
     99e:	89 23       	and	r24, r25
     9a0:	8c 93       	st	X, r24
     9a2:	88 81       	ld	r24, Y
     9a4:	83 2b       	or	r24, r19
     9a6:	88 83       	st	Y, r24
     9a8:	2f bf       	out	0x3f, r18	; 63
     9aa:	06 c0       	rjmp	.+12     	; 0x9b8 <pinMode+0x78>
     9ac:	9f b7       	in	r25, 0x3f	; 63
     9ae:	f8 94       	cli
     9b0:	8c 91       	ld	r24, X
     9b2:	83 2b       	or	r24, r19
     9b4:	8c 93       	st	X, r24
     9b6:	9f bf       	out	0x3f, r25	; 63
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	08 95       	ret

000009be <digitalWrite>:
     9be:	48 2f       	mov	r20, r24
     9c0:	50 e0       	ldi	r21, 0x00	; 0
     9c2:	ca 01       	movw	r24, r20
     9c4:	82 55       	subi	r24, 0x52	; 82
     9c6:	9f 4f       	sbci	r25, 0xFF	; 255
     9c8:	fc 01       	movw	r30, r24
     9ca:	24 91       	lpm	r18, Z
     9cc:	ca 01       	movw	r24, r20
     9ce:	86 56       	subi	r24, 0x66	; 102
     9d0:	9f 4f       	sbci	r25, 0xFF	; 255
     9d2:	fc 01       	movw	r30, r24
     9d4:	94 91       	lpm	r25, Z
     9d6:	4a 57       	subi	r20, 0x7A	; 122
     9d8:	5f 4f       	sbci	r21, 0xFF	; 255
     9da:	fa 01       	movw	r30, r20
     9dc:	34 91       	lpm	r19, Z
     9de:	33 23       	and	r19, r19
     9e0:	09 f4       	brne	.+2      	; 0x9e4 <digitalWrite+0x26>
     9e2:	40 c0       	rjmp	.+128    	; 0xa64 <digitalWrite+0xa6>
     9e4:	22 23       	and	r18, r18
     9e6:	51 f1       	breq	.+84     	; 0xa3c <digitalWrite+0x7e>
     9e8:	23 30       	cpi	r18, 0x03	; 3
     9ea:	71 f0       	breq	.+28     	; 0xa08 <digitalWrite+0x4a>
     9ec:	24 30       	cpi	r18, 0x04	; 4
     9ee:	28 f4       	brcc	.+10     	; 0x9fa <digitalWrite+0x3c>
     9f0:	21 30       	cpi	r18, 0x01	; 1
     9f2:	a1 f0       	breq	.+40     	; 0xa1c <digitalWrite+0x5e>
     9f4:	22 30       	cpi	r18, 0x02	; 2
     9f6:	11 f5       	brne	.+68     	; 0xa3c <digitalWrite+0x7e>
     9f8:	14 c0       	rjmp	.+40     	; 0xa22 <digitalWrite+0x64>
     9fa:	26 30       	cpi	r18, 0x06	; 6
     9fc:	b1 f0       	breq	.+44     	; 0xa2a <digitalWrite+0x6c>
     9fe:	27 30       	cpi	r18, 0x07	; 7
     a00:	c1 f0       	breq	.+48     	; 0xa32 <digitalWrite+0x74>
     a02:	24 30       	cpi	r18, 0x04	; 4
     a04:	d9 f4       	brne	.+54     	; 0xa3c <digitalWrite+0x7e>
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <digitalWrite+0x52>
     a08:	80 91 80 00 	lds	r24, 0x0080
     a0c:	8f 77       	andi	r24, 0x7F	; 127
     a0e:	03 c0       	rjmp	.+6      	; 0xa16 <digitalWrite+0x58>
     a10:	80 91 80 00 	lds	r24, 0x0080
     a14:	8f 7d       	andi	r24, 0xDF	; 223
     a16:	80 93 80 00 	sts	0x0080, r24
     a1a:	10 c0       	rjmp	.+32     	; 0xa3c <digitalWrite+0x7e>
     a1c:	84 b5       	in	r24, 0x24	; 36
     a1e:	8f 77       	andi	r24, 0x7F	; 127
     a20:	02 c0       	rjmp	.+4      	; 0xa26 <digitalWrite+0x68>
     a22:	84 b5       	in	r24, 0x24	; 36
     a24:	8f 7d       	andi	r24, 0xDF	; 223
     a26:	84 bd       	out	0x24, r24	; 36
     a28:	09 c0       	rjmp	.+18     	; 0xa3c <digitalWrite+0x7e>
     a2a:	80 91 b0 00 	lds	r24, 0x00B0
     a2e:	8f 77       	andi	r24, 0x7F	; 127
     a30:	03 c0       	rjmp	.+6      	; 0xa38 <digitalWrite+0x7a>
     a32:	80 91 b0 00 	lds	r24, 0x00B0
     a36:	8f 7d       	andi	r24, 0xDF	; 223
     a38:	80 93 b0 00 	sts	0x00B0, r24
     a3c:	e3 2f       	mov	r30, r19
     a3e:	f0 e0       	ldi	r31, 0x00	; 0
     a40:	ee 0f       	add	r30, r30
     a42:	ff 1f       	adc	r31, r31
     a44:	ee 58       	subi	r30, 0x8E	; 142
     a46:	ff 4f       	sbci	r31, 0xFF	; 255
     a48:	a5 91       	lpm	r26, Z+
     a4a:	b4 91       	lpm	r27, Z
     a4c:	2f b7       	in	r18, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	66 23       	and	r22, r22
     a52:	21 f4       	brne	.+8      	; 0xa5c <digitalWrite+0x9e>
     a54:	8c 91       	ld	r24, X
     a56:	90 95       	com	r25
     a58:	89 23       	and	r24, r25
     a5a:	02 c0       	rjmp	.+4      	; 0xa60 <digitalWrite+0xa2>
     a5c:	8c 91       	ld	r24, X
     a5e:	89 2b       	or	r24, r25
     a60:	8c 93       	st	X, r24
     a62:	2f bf       	out	0x3f, r18	; 63
     a64:	08 95       	ret

00000a66 <__vector_18>:
     a66:	1f 92       	push	r1
     a68:	0f 92       	push	r0
     a6a:	0f b6       	in	r0, 0x3f	; 63
     a6c:	0f 92       	push	r0
     a6e:	11 24       	eor	r1, r1
     a70:	2f 93       	push	r18
     a72:	3f 93       	push	r19
     a74:	4f 93       	push	r20
     a76:	8f 93       	push	r24
     a78:	9f 93       	push	r25
     a7a:	ef 93       	push	r30
     a7c:	ff 93       	push	r31
     a7e:	40 91 c6 00 	lds	r20, 0x00C6
     a82:	20 91 b5 01 	lds	r18, 0x01B5
     a86:	30 91 b6 01 	lds	r19, 0x01B6
     a8a:	2f 5f       	subi	r18, 0xFF	; 255
     a8c:	3f 4f       	sbci	r19, 0xFF	; 255
     a8e:	2f 73       	andi	r18, 0x3F	; 63
     a90:	30 70       	andi	r19, 0x00	; 0
     a92:	80 91 b7 01 	lds	r24, 0x01B7
     a96:	90 91 b8 01 	lds	r25, 0x01B8
     a9a:	28 17       	cp	r18, r24
     a9c:	39 07       	cpc	r19, r25
     a9e:	59 f0       	breq	.+22     	; 0xab6 <__vector_18+0x50>
     aa0:	e0 91 b5 01 	lds	r30, 0x01B5
     aa4:	f0 91 b6 01 	lds	r31, 0x01B6
     aa8:	eb 58       	subi	r30, 0x8B	; 139
     aaa:	fe 4f       	sbci	r31, 0xFE	; 254
     aac:	40 83       	st	Z, r20
     aae:	30 93 b6 01 	sts	0x01B6, r19
     ab2:	20 93 b5 01 	sts	0x01B5, r18
     ab6:	ff 91       	pop	r31
     ab8:	ef 91       	pop	r30
     aba:	9f 91       	pop	r25
     abc:	8f 91       	pop	r24
     abe:	4f 91       	pop	r20
     ac0:	3f 91       	pop	r19
     ac2:	2f 91       	pop	r18
     ac4:	0f 90       	pop	r0
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	0f 90       	pop	r0
     aca:	1f 90       	pop	r1
     acc:	18 95       	reti

00000ace <__vector_19>:
     ace:	1f 92       	push	r1
     ad0:	0f 92       	push	r0
     ad2:	0f b6       	in	r0, 0x3f	; 63
     ad4:	0f 92       	push	r0
     ad6:	11 24       	eor	r1, r1
     ad8:	2f 93       	push	r18
     ada:	3f 93       	push	r19
     adc:	8f 93       	push	r24
     ade:	9f 93       	push	r25
     ae0:	ef 93       	push	r30
     ae2:	ff 93       	push	r31
     ae4:	20 91 f9 01 	lds	r18, 0x01F9
     ae8:	30 91 fa 01 	lds	r19, 0x01FA
     aec:	80 91 fb 01 	lds	r24, 0x01FB
     af0:	90 91 fc 01 	lds	r25, 0x01FC
     af4:	28 17       	cp	r18, r24
     af6:	39 07       	cpc	r19, r25
     af8:	31 f4       	brne	.+12     	; 0xb06 <__vector_19+0x38>
     afa:	80 91 c1 00 	lds	r24, 0x00C1
     afe:	8f 7d       	andi	r24, 0xDF	; 223
     b00:	80 93 c1 00 	sts	0x00C1, r24
     b04:	14 c0       	rjmp	.+40     	; 0xb2e <__vector_19+0x60>
     b06:	e0 91 fb 01 	lds	r30, 0x01FB
     b0a:	f0 91 fc 01 	lds	r31, 0x01FC
     b0e:	e7 54       	subi	r30, 0x47	; 71
     b10:	fe 4f       	sbci	r31, 0xFE	; 254
     b12:	20 81       	ld	r18, Z
     b14:	80 91 fb 01 	lds	r24, 0x01FB
     b18:	90 91 fc 01 	lds	r25, 0x01FC
     b1c:	01 96       	adiw	r24, 0x01	; 1
     b1e:	8f 73       	andi	r24, 0x3F	; 63
     b20:	90 70       	andi	r25, 0x00	; 0
     b22:	90 93 fc 01 	sts	0x01FC, r25
     b26:	80 93 fb 01 	sts	0x01FB, r24
     b2a:	20 93 c6 00 	sts	0x00C6, r18
     b2e:	ff 91       	pop	r31
     b30:	ef 91       	pop	r30
     b32:	9f 91       	pop	r25
     b34:	8f 91       	pop	r24
     b36:	3f 91       	pop	r19
     b38:	2f 91       	pop	r18
     b3a:	0f 90       	pop	r0
     b3c:	0f be       	out	0x3f, r0	; 63
     b3e:	0f 90       	pop	r0
     b40:	1f 90       	pop	r1
     b42:	18 95       	reti

00000b44 <_ZN14HardwareSerial5beginEm>:
     b44:	af 92       	push	r10
     b46:	bf 92       	push	r11
     b48:	df 92       	push	r13
     b4a:	ef 92       	push	r14
     b4c:	ff 92       	push	r15
     b4e:	0f 93       	push	r16
     b50:	1f 93       	push	r17
     b52:	cf 93       	push	r28
     b54:	df 93       	push	r29
     b56:	ec 01       	movw	r28, r24
     b58:	7a 01       	movw	r14, r20
     b5a:	8b 01       	movw	r16, r22
     b5c:	dd 24       	eor	r13, r13
     b5e:	40 30       	cpi	r20, 0x00	; 0
     b60:	81 ee       	ldi	r24, 0xE1	; 225
     b62:	58 07       	cpc	r21, r24
     b64:	80 e0       	ldi	r24, 0x00	; 0
     b66:	68 07       	cpc	r22, r24
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	78 07       	cpc	r23, r24
     b6c:	11 f0       	breq	.+4      	; 0xb72 <_ZN14HardwareSerial5beginEm+0x2e>
     b6e:	dd 24       	eor	r13, r13
     b70:	d3 94       	inc	r13
     b72:	91 e0       	ldi	r25, 0x01	; 1
     b74:	a9 2e       	mov	r10, r25
     b76:	b1 2c       	mov	r11, r1
     b78:	ec 89       	ldd	r30, Y+20	; 0x14
     b7a:	fd 89       	ldd	r31, Y+21	; 0x15
     b7c:	dd 20       	and	r13, r13
     b7e:	69 f0       	breq	.+26     	; 0xb9a <_ZN14HardwareSerial5beginEm+0x56>
     b80:	c5 01       	movw	r24, r10
     b82:	0e 8c       	ldd	r0, Y+30	; 0x1e
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <_ZN14HardwareSerial5beginEm+0x46>
     b86:	88 0f       	add	r24, r24
     b88:	99 1f       	adc	r25, r25
     b8a:	0a 94       	dec	r0
     b8c:	e2 f7       	brpl	.-8      	; 0xb86 <_ZN14HardwareSerial5beginEm+0x42>
     b8e:	80 83       	st	Z, r24
     b90:	60 e0       	ldi	r22, 0x00	; 0
     b92:	79 e0       	ldi	r23, 0x09	; 9
     b94:	8d e3       	ldi	r24, 0x3D	; 61
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	05 c0       	rjmp	.+10     	; 0xba4 <_ZN14HardwareSerial5beginEm+0x60>
     b9a:	10 82       	st	Z, r1
     b9c:	60 e8       	ldi	r22, 0x80	; 128
     b9e:	74 e8       	ldi	r23, 0x84	; 132
     ba0:	8e e1       	ldi	r24, 0x1E	; 30
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	a8 01       	movw	r20, r16
     ba6:	97 01       	movw	r18, r14
     ba8:	0e 94 aa 08 	call	0x1154	; 0x1154 <__udivmodsi4>
     bac:	21 50       	subi	r18, 0x01	; 1
     bae:	30 40       	sbci	r19, 0x00	; 0
     bb0:	40 40       	sbci	r20, 0x00	; 0
     bb2:	50 40       	sbci	r21, 0x00	; 0
     bb4:	56 95       	lsr	r21
     bb6:	47 95       	ror	r20
     bb8:	37 95       	ror	r19
     bba:	27 95       	ror	r18
     bbc:	80 e1       	ldi	r24, 0x10	; 16
     bbe:	20 30       	cpi	r18, 0x00	; 0
     bc0:	38 07       	cpc	r19, r24
     bc2:	20 f0       	brcs	.+8      	; 0xbcc <_ZN14HardwareSerial5beginEm+0x88>
     bc4:	dd 20       	and	r13, r13
     bc6:	11 f0       	breq	.+4      	; 0xbcc <_ZN14HardwareSerial5beginEm+0x88>
     bc8:	dd 24       	eor	r13, r13
     bca:	d6 cf       	rjmp	.-84     	; 0xb78 <_ZN14HardwareSerial5beginEm+0x34>
     bcc:	e8 89       	ldd	r30, Y+16	; 0x10
     bce:	f9 89       	ldd	r31, Y+17	; 0x11
     bd0:	30 83       	st	Z, r19
     bd2:	ea 89       	ldd	r30, Y+18	; 0x12
     bd4:	fb 89       	ldd	r31, Y+19	; 0x13
     bd6:	20 83       	st	Z, r18
     bd8:	ee 89       	ldd	r30, Y+22	; 0x16
     bda:	ff 89       	ldd	r31, Y+23	; 0x17
     bdc:	40 81       	ld	r20, Z
     bde:	21 e0       	ldi	r18, 0x01	; 1
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	c9 01       	movw	r24, r18
     be4:	0a 8c       	ldd	r0, Y+26	; 0x1a
     be6:	02 c0       	rjmp	.+4      	; 0xbec <_ZN14HardwareSerial5beginEm+0xa8>
     be8:	88 0f       	add	r24, r24
     bea:	99 1f       	adc	r25, r25
     bec:	0a 94       	dec	r0
     bee:	e2 f7       	brpl	.-8      	; 0xbe8 <_ZN14HardwareSerial5beginEm+0xa4>
     bf0:	48 2b       	or	r20, r24
     bf2:	40 83       	st	Z, r20
     bf4:	ee 89       	ldd	r30, Y+22	; 0x16
     bf6:	ff 89       	ldd	r31, Y+23	; 0x17
     bf8:	40 81       	ld	r20, Z
     bfa:	c9 01       	movw	r24, r18
     bfc:	0b 8c       	ldd	r0, Y+27	; 0x1b
     bfe:	02 c0       	rjmp	.+4      	; 0xc04 <_ZN14HardwareSerial5beginEm+0xc0>
     c00:	88 0f       	add	r24, r24
     c02:	99 1f       	adc	r25, r25
     c04:	0a 94       	dec	r0
     c06:	e2 f7       	brpl	.-8      	; 0xc00 <_ZN14HardwareSerial5beginEm+0xbc>
     c08:	48 2b       	or	r20, r24
     c0a:	40 83       	st	Z, r20
     c0c:	ee 89       	ldd	r30, Y+22	; 0x16
     c0e:	ff 89       	ldd	r31, Y+23	; 0x17
     c10:	40 81       	ld	r20, Z
     c12:	c9 01       	movw	r24, r18
     c14:	0c 8c       	ldd	r0, Y+28	; 0x1c
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <_ZN14HardwareSerial5beginEm+0xd8>
     c18:	88 0f       	add	r24, r24
     c1a:	99 1f       	adc	r25, r25
     c1c:	0a 94       	dec	r0
     c1e:	e2 f7       	brpl	.-8      	; 0xc18 <_ZN14HardwareSerial5beginEm+0xd4>
     c20:	48 2b       	or	r20, r24
     c22:	40 83       	st	Z, r20
     c24:	ee 89       	ldd	r30, Y+22	; 0x16
     c26:	ff 89       	ldd	r31, Y+23	; 0x17
     c28:	80 81       	ld	r24, Z
     c2a:	0d 8c       	ldd	r0, Y+29	; 0x1d
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <_ZN14HardwareSerial5beginEm+0xee>
     c2e:	22 0f       	add	r18, r18
     c30:	33 1f       	adc	r19, r19
     c32:	0a 94       	dec	r0
     c34:	e2 f7       	brpl	.-8      	; 0xc2e <_ZN14HardwareSerial5beginEm+0xea>
     c36:	20 95       	com	r18
     c38:	28 23       	and	r18, r24
     c3a:	20 83       	st	Z, r18
     c3c:	df 91       	pop	r29
     c3e:	cf 91       	pop	r28
     c40:	1f 91       	pop	r17
     c42:	0f 91       	pop	r16
     c44:	ff 90       	pop	r15
     c46:	ef 90       	pop	r14
     c48:	df 90       	pop	r13
     c4a:	bf 90       	pop	r11
     c4c:	af 90       	pop	r10
     c4e:	08 95       	ret

00000c50 <_ZN14HardwareSerial9availableEv>:
     c50:	dc 01       	movw	r26, r24
     c52:	1c 96       	adiw	r26, 0x0c	; 12
     c54:	ed 91       	ld	r30, X+
     c56:	fc 91       	ld	r31, X
     c58:	1d 97       	sbiw	r26, 0x0d	; 13
     c5a:	e0 5c       	subi	r30, 0xC0	; 192
     c5c:	ff 4f       	sbci	r31, 0xFF	; 255
     c5e:	21 91       	ld	r18, Z+
     c60:	31 91       	ld	r19, Z+
     c62:	80 81       	ld	r24, Z
     c64:	91 81       	ldd	r25, Z+1	; 0x01
     c66:	28 1b       	sub	r18, r24
     c68:	39 0b       	sbc	r19, r25
     c6a:	2f 73       	andi	r18, 0x3F	; 63
     c6c:	30 70       	andi	r19, 0x00	; 0
     c6e:	c9 01       	movw	r24, r18
     c70:	08 95       	ret

00000c72 <_ZN14HardwareSerial4peekEv>:
     c72:	dc 01       	movw	r26, r24
     c74:	1c 96       	adiw	r26, 0x0c	; 12
     c76:	ed 91       	ld	r30, X+
     c78:	fc 91       	ld	r31, X
     c7a:	1d 97       	sbiw	r26, 0x0d	; 13
     c7c:	e0 5c       	subi	r30, 0xC0	; 192
     c7e:	ff 4f       	sbci	r31, 0xFF	; 255
     c80:	20 81       	ld	r18, Z
     c82:	31 81       	ldd	r19, Z+1	; 0x01
     c84:	e0 54       	subi	r30, 0x40	; 64
     c86:	f0 40       	sbci	r31, 0x00	; 0
     c88:	df 01       	movw	r26, r30
     c8a:	ae 5b       	subi	r26, 0xBE	; 190
     c8c:	bf 4f       	sbci	r27, 0xFF	; 255
     c8e:	8d 91       	ld	r24, X+
     c90:	9c 91       	ld	r25, X
     c92:	11 97       	sbiw	r26, 0x01	; 1
     c94:	28 17       	cp	r18, r24
     c96:	39 07       	cpc	r19, r25
     c98:	19 f4       	brne	.+6      	; 0xca0 <_ZN14HardwareSerial4peekEv+0x2e>
     c9a:	2f ef       	ldi	r18, 0xFF	; 255
     c9c:	3f ef       	ldi	r19, 0xFF	; 255
     c9e:	07 c0       	rjmp	.+14     	; 0xcae <_ZN14HardwareSerial4peekEv+0x3c>
     ca0:	8d 91       	ld	r24, X+
     ca2:	9c 91       	ld	r25, X
     ca4:	e8 0f       	add	r30, r24
     ca6:	f9 1f       	adc	r31, r25
     ca8:	80 81       	ld	r24, Z
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	c9 01       	movw	r24, r18
     cb0:	08 95       	ret

00000cb2 <_ZN14HardwareSerial4readEv>:
     cb2:	dc 01       	movw	r26, r24
     cb4:	1c 96       	adiw	r26, 0x0c	; 12
     cb6:	ed 91       	ld	r30, X+
     cb8:	fc 91       	ld	r31, X
     cba:	1d 97       	sbiw	r26, 0x0d	; 13
     cbc:	e0 5c       	subi	r30, 0xC0	; 192
     cbe:	ff 4f       	sbci	r31, 0xFF	; 255
     cc0:	20 81       	ld	r18, Z
     cc2:	31 81       	ldd	r19, Z+1	; 0x01
     cc4:	e0 54       	subi	r30, 0x40	; 64
     cc6:	f0 40       	sbci	r31, 0x00	; 0
     cc8:	df 01       	movw	r26, r30
     cca:	ae 5b       	subi	r26, 0xBE	; 190
     ccc:	bf 4f       	sbci	r27, 0xFF	; 255
     cce:	8d 91       	ld	r24, X+
     cd0:	9c 91       	ld	r25, X
     cd2:	11 97       	sbiw	r26, 0x01	; 1
     cd4:	28 17       	cp	r18, r24
     cd6:	39 07       	cpc	r19, r25
     cd8:	19 f4       	brne	.+6      	; 0xce0 <_ZN14HardwareSerial4readEv+0x2e>
     cda:	2f ef       	ldi	r18, 0xFF	; 255
     cdc:	3f ef       	ldi	r19, 0xFF	; 255
     cde:	10 c0       	rjmp	.+32     	; 0xd00 <_ZN14HardwareSerial4readEv+0x4e>
     ce0:	8d 91       	ld	r24, X+
     ce2:	9c 91       	ld	r25, X
     ce4:	11 97       	sbiw	r26, 0x01	; 1
     ce6:	e8 0f       	add	r30, r24
     ce8:	f9 1f       	adc	r31, r25
     cea:	20 81       	ld	r18, Z
     cec:	8d 91       	ld	r24, X+
     cee:	9c 91       	ld	r25, X
     cf0:	11 97       	sbiw	r26, 0x01	; 1
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	8f 73       	andi	r24, 0x3F	; 63
     cf6:	90 70       	andi	r25, 0x00	; 0
     cf8:	11 96       	adiw	r26, 0x01	; 1
     cfa:	9c 93       	st	X, r25
     cfc:	8e 93       	st	-X, r24
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	c9 01       	movw	r24, r18
     d02:	08 95       	ret

00000d04 <_ZN14HardwareSerial5flushEv>:
     d04:	fc 01       	movw	r30, r24
     d06:	86 85       	ldd	r24, Z+14	; 0x0e
     d08:	97 85       	ldd	r25, Z+15	; 0x0f
     d0a:	dc 01       	movw	r26, r24
     d0c:	a0 5c       	subi	r26, 0xC0	; 192
     d0e:	bf 4f       	sbci	r27, 0xFF	; 255
     d10:	fc 01       	movw	r30, r24
     d12:	ee 5b       	subi	r30, 0xBE	; 190
     d14:	ff 4f       	sbci	r31, 0xFF	; 255
     d16:	2d 91       	ld	r18, X+
     d18:	3c 91       	ld	r19, X
     d1a:	11 97       	sbiw	r26, 0x01	; 1
     d1c:	80 81       	ld	r24, Z
     d1e:	91 81       	ldd	r25, Z+1	; 0x01
     d20:	28 17       	cp	r18, r24
     d22:	39 07       	cpc	r19, r25
     d24:	c1 f7       	brne	.-16     	; 0xd16 <_ZN14HardwareSerial5flushEv+0x12>
     d26:	08 95       	ret

00000d28 <_ZN14HardwareSerial5writeEh>:
     d28:	cf 93       	push	r28
     d2a:	df 93       	push	r29
     d2c:	ec 01       	movw	r28, r24
     d2e:	ee 85       	ldd	r30, Y+14	; 0x0e
     d30:	ff 85       	ldd	r31, Y+15	; 0x0f
     d32:	e0 5c       	subi	r30, 0xC0	; 192
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	20 81       	ld	r18, Z
     d38:	31 81       	ldd	r19, Z+1	; 0x01
     d3a:	e0 54       	subi	r30, 0x40	; 64
     d3c:	f0 40       	sbci	r31, 0x00	; 0
     d3e:	2f 5f       	subi	r18, 0xFF	; 255
     d40:	3f 4f       	sbci	r19, 0xFF	; 255
     d42:	2f 73       	andi	r18, 0x3F	; 63
     d44:	30 70       	andi	r19, 0x00	; 0
     d46:	df 01       	movw	r26, r30
     d48:	ae 5b       	subi	r26, 0xBE	; 190
     d4a:	bf 4f       	sbci	r27, 0xFF	; 255
     d4c:	8d 91       	ld	r24, X+
     d4e:	9c 91       	ld	r25, X
     d50:	11 97       	sbiw	r26, 0x01	; 1
     d52:	28 17       	cp	r18, r24
     d54:	39 07       	cpc	r19, r25
     d56:	d1 f3       	breq	.-12     	; 0xd4c <_ZN14HardwareSerial5writeEh+0x24>
     d58:	e0 5c       	subi	r30, 0xC0	; 192
     d5a:	ff 4f       	sbci	r31, 0xFF	; 255
     d5c:	80 81       	ld	r24, Z
     d5e:	91 81       	ldd	r25, Z+1	; 0x01
     d60:	e0 54       	subi	r30, 0x40	; 64
     d62:	f0 40       	sbci	r31, 0x00	; 0
     d64:	e8 0f       	add	r30, r24
     d66:	f9 1f       	adc	r31, r25
     d68:	60 83       	st	Z, r22
     d6a:	ee 85       	ldd	r30, Y+14	; 0x0e
     d6c:	ff 85       	ldd	r31, Y+15	; 0x0f
     d6e:	e0 5c       	subi	r30, 0xC0	; 192
     d70:	ff 4f       	sbci	r31, 0xFF	; 255
     d72:	31 83       	std	Z+1, r19	; 0x01
     d74:	20 83       	st	Z, r18
     d76:	ee 89       	ldd	r30, Y+22	; 0x16
     d78:	ff 89       	ldd	r31, Y+23	; 0x17
     d7a:	20 81       	ld	r18, Z
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	0d 8c       	ldd	r0, Y+29	; 0x1d
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <_ZN14HardwareSerial5writeEh+0x60>
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	0a 94       	dec	r0
     d8a:	e2 f7       	brpl	.-8      	; 0xd84 <_ZN14HardwareSerial5writeEh+0x5c>
     d8c:	28 2b       	or	r18, r24
     d8e:	20 83       	st	Z, r18
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	08 95       	ret

00000d9a <_GLOBAL__I_rx_buffer>:
     d9a:	10 92 00 02 	sts	0x0200, r1
     d9e:	10 92 ff 01 	sts	0x01FF, r1
     da2:	88 ee       	ldi	r24, 0xE8	; 232
     da4:	93 e0       	ldi	r25, 0x03	; 3
     da6:	a0 e0       	ldi	r26, 0x00	; 0
     da8:	b0 e0       	ldi	r27, 0x00	; 0
     daa:	80 93 01 02 	sts	0x0201, r24
     dae:	90 93 02 02 	sts	0x0202, r25
     db2:	a0 93 03 02 	sts	0x0203, r26
     db6:	b0 93 04 02 	sts	0x0204, r27
     dba:	85 e3       	ldi	r24, 0x35	; 53
     dbc:	91 e0       	ldi	r25, 0x01	; 1
     dbe:	90 93 fe 01 	sts	0x01FE, r25
     dc2:	80 93 fd 01 	sts	0x01FD, r24
     dc6:	85 e7       	ldi	r24, 0x75	; 117
     dc8:	91 e0       	ldi	r25, 0x01	; 1
     dca:	90 93 0a 02 	sts	0x020A, r25
     dce:	80 93 09 02 	sts	0x0209, r24
     dd2:	89 eb       	ldi	r24, 0xB9	; 185
     dd4:	91 e0       	ldi	r25, 0x01	; 1
     dd6:	90 93 0c 02 	sts	0x020C, r25
     dda:	80 93 0b 02 	sts	0x020B, r24
     dde:	85 ec       	ldi	r24, 0xC5	; 197
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	90 93 0e 02 	sts	0x020E, r25
     de6:	80 93 0d 02 	sts	0x020D, r24
     dea:	84 ec       	ldi	r24, 0xC4	; 196
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	90 93 10 02 	sts	0x0210, r25
     df2:	80 93 0f 02 	sts	0x020F, r24
     df6:	80 ec       	ldi	r24, 0xC0	; 192
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	90 93 12 02 	sts	0x0212, r25
     dfe:	80 93 11 02 	sts	0x0211, r24
     e02:	81 ec       	ldi	r24, 0xC1	; 193
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	90 93 14 02 	sts	0x0214, r25
     e0a:	80 93 13 02 	sts	0x0213, r24
     e0e:	86 ec       	ldi	r24, 0xC6	; 198
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	90 93 16 02 	sts	0x0216, r25
     e16:	80 93 15 02 	sts	0x0215, r24
     e1a:	84 e0       	ldi	r24, 0x04	; 4
     e1c:	80 93 17 02 	sts	0x0217, r24
     e20:	83 e0       	ldi	r24, 0x03	; 3
     e22:	80 93 18 02 	sts	0x0218, r24
     e26:	87 e0       	ldi	r24, 0x07	; 7
     e28:	80 93 19 02 	sts	0x0219, r24
     e2c:	85 e0       	ldi	r24, 0x05	; 5
     e2e:	80 93 1a 02 	sts	0x021A, r24
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	80 93 1b 02 	sts	0x021B, r24
     e38:	08 95       	ret

00000e3a <_ZN5Print5writeEPKhj>:
     e3a:	cf 92       	push	r12
     e3c:	df 92       	push	r13
     e3e:	ef 92       	push	r14
     e40:	ff 92       	push	r15
     e42:	0f 93       	push	r16
     e44:	1f 93       	push	r17
     e46:	cf 93       	push	r28
     e48:	df 93       	push	r29
     e4a:	7c 01       	movw	r14, r24
     e4c:	6b 01       	movw	r12, r22
     e4e:	8a 01       	movw	r16, r20
     e50:	c0 e0       	ldi	r28, 0x00	; 0
     e52:	d0 e0       	ldi	r29, 0x00	; 0
     e54:	0f c0       	rjmp	.+30     	; 0xe74 <_ZN5Print5writeEPKhj+0x3a>
     e56:	d6 01       	movw	r26, r12
     e58:	6d 91       	ld	r22, X+
     e5a:	6d 01       	movw	r12, r26
     e5c:	d7 01       	movw	r26, r14
     e5e:	ed 91       	ld	r30, X+
     e60:	fc 91       	ld	r31, X
     e62:	01 90       	ld	r0, Z+
     e64:	f0 81       	ld	r31, Z
     e66:	e0 2d       	mov	r30, r0
     e68:	c7 01       	movw	r24, r14
     e6a:	09 95       	icall
     e6c:	c8 0f       	add	r28, r24
     e6e:	d9 1f       	adc	r29, r25
     e70:	01 50       	subi	r16, 0x01	; 1
     e72:	10 40       	sbci	r17, 0x00	; 0
     e74:	01 15       	cp	r16, r1
     e76:	11 05       	cpc	r17, r1
     e78:	71 f7       	brne	.-36     	; 0xe56 <_ZN5Print5writeEPKhj+0x1c>
     e7a:	ce 01       	movw	r24, r28
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	1f 91       	pop	r17
     e82:	0f 91       	pop	r16
     e84:	ff 90       	pop	r15
     e86:	ef 90       	pop	r14
     e88:	df 90       	pop	r13
     e8a:	cf 90       	pop	r12
     e8c:	08 95       	ret

00000e8e <_ZN5Print7printlnEv>:
     e8e:	ef 92       	push	r14
     e90:	ff 92       	push	r15
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	8c 01       	movw	r16, r24
     e98:	dc 01       	movw	r26, r24
     e9a:	ed 91       	ld	r30, X+
     e9c:	fc 91       	ld	r31, X
     e9e:	01 90       	ld	r0, Z+
     ea0:	f0 81       	ld	r31, Z
     ea2:	e0 2d       	mov	r30, r0
     ea4:	6d e0       	ldi	r22, 0x0D	; 13
     ea6:	09 95       	icall
     ea8:	7c 01       	movw	r14, r24
     eaa:	d8 01       	movw	r26, r16
     eac:	ed 91       	ld	r30, X+
     eae:	fc 91       	ld	r31, X
     eb0:	01 90       	ld	r0, Z+
     eb2:	f0 81       	ld	r31, Z
     eb4:	e0 2d       	mov	r30, r0
     eb6:	c8 01       	movw	r24, r16
     eb8:	6a e0       	ldi	r22, 0x0A	; 10
     eba:	09 95       	icall
     ebc:	9c 01       	movw	r18, r24
     ebe:	2e 0d       	add	r18, r14
     ec0:	3f 1d       	adc	r19, r15
     ec2:	c9 01       	movw	r24, r18
     ec4:	1f 91       	pop	r17
     ec6:	0f 91       	pop	r16
     ec8:	ff 90       	pop	r15
     eca:	ef 90       	pop	r14
     ecc:	08 95       	ret

00000ece <_ZN5Print5writeEPKc>:
     ece:	cf 93       	push	r28
     ed0:	df 93       	push	r29
     ed2:	db 01       	movw	r26, r22
     ed4:	0d 90       	ld	r0, X+
     ed6:	00 20       	and	r0, r0
     ed8:	e9 f7       	brne	.-6      	; 0xed4 <_ZN5Print5writeEPKc+0x6>
     eda:	11 97       	sbiw	r26, 0x01	; 1
     edc:	a6 1b       	sub	r26, r22
     ede:	b7 0b       	sbc	r27, r23
     ee0:	ec 01       	movw	r28, r24
     ee2:	e8 81       	ld	r30, Y
     ee4:	f9 81       	ldd	r31, Y+1	; 0x01
     ee6:	02 80       	ldd	r0, Z+2	; 0x02
     ee8:	f3 81       	ldd	r31, Z+3	; 0x03
     eea:	e0 2d       	mov	r30, r0
     eec:	ad 01       	movw	r20, r26
     eee:	09 95       	icall
     ef0:	df 91       	pop	r29
     ef2:	cf 91       	pop	r28
     ef4:	08 95       	ret

00000ef6 <_ZN5Print11printNumberEmh>:
     ef6:	4f 92       	push	r4
     ef8:	5f 92       	push	r5
     efa:	7f 92       	push	r7
     efc:	8f 92       	push	r8
     efe:	9f 92       	push	r9
     f00:	af 92       	push	r10
     f02:	bf 92       	push	r11
     f04:	cf 92       	push	r12
     f06:	df 92       	push	r13
     f08:	ef 92       	push	r14
     f0a:	ff 92       	push	r15
     f0c:	0f 93       	push	r16
     f0e:	1f 93       	push	r17
     f10:	df 93       	push	r29
     f12:	cf 93       	push	r28
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
     f18:	a1 97       	sbiw	r28, 0x21	; 33
     f1a:	0f b6       	in	r0, 0x3f	; 63
     f1c:	f8 94       	cli
     f1e:	de bf       	out	0x3e, r29	; 62
     f20:	0f be       	out	0x3f, r0	; 63
     f22:	cd bf       	out	0x3d, r28	; 61
     f24:	2c 01       	movw	r4, r24
     f26:	74 2e       	mov	r7, r20
     f28:	cb 01       	movw	r24, r22
     f2a:	22 30       	cpi	r18, 0x02	; 2
     f2c:	08 f4       	brcc	.+2      	; 0xf30 <_ZN5Print11printNumberEmh+0x3a>
     f2e:	2a e0       	ldi	r18, 0x0A	; 10
     f30:	19 a2       	std	Y+33, r1	; 0x21
     f32:	31 e2       	ldi	r19, 0x21	; 33
     f34:	c3 2e       	mov	r12, r19
     f36:	d1 2c       	mov	r13, r1
     f38:	cc 0e       	add	r12, r28
     f3a:	dd 1e       	adc	r13, r29
     f3c:	82 2e       	mov	r8, r18
     f3e:	99 24       	eor	r9, r9
     f40:	aa 24       	eor	r10, r10
     f42:	bb 24       	eor	r11, r11
     f44:	67 2d       	mov	r22, r7
     f46:	75 2f       	mov	r23, r21
     f48:	a5 01       	movw	r20, r10
     f4a:	94 01       	movw	r18, r8
     f4c:	0e 94 aa 08 	call	0x1154	; 0x1154 <__udivmodsi4>
     f50:	79 01       	movw	r14, r18
     f52:	8a 01       	movw	r16, r20
     f54:	c8 01       	movw	r24, r16
     f56:	b7 01       	movw	r22, r14
     f58:	a5 01       	movw	r20, r10
     f5a:	94 01       	movw	r18, r8
     f5c:	0e 94 9a 08 	call	0x1134	; 0x1134 <__mulsi3>
     f60:	47 2d       	mov	r20, r7
     f62:	46 1b       	sub	r20, r22
     f64:	08 94       	sec
     f66:	c1 08       	sbc	r12, r1
     f68:	d1 08       	sbc	r13, r1
     f6a:	4a 30       	cpi	r20, 0x0A	; 10
     f6c:	14 f4       	brge	.+4      	; 0xf72 <_ZN5Print11printNumberEmh+0x7c>
     f6e:	40 5d       	subi	r20, 0xD0	; 208
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <_ZN5Print11printNumberEmh+0x7e>
     f72:	49 5c       	subi	r20, 0xC9	; 201
     f74:	f6 01       	movw	r30, r12
     f76:	40 83       	st	Z, r20
     f78:	e1 14       	cp	r14, r1
     f7a:	f1 04       	cpc	r15, r1
     f7c:	01 05       	cpc	r16, r1
     f7e:	11 05       	cpc	r17, r1
     f80:	21 f0       	breq	.+8      	; 0xf8a <_ZN5Print11printNumberEmh+0x94>
     f82:	7e 2c       	mov	r7, r14
     f84:	5f 2d       	mov	r21, r15
     f86:	c8 01       	movw	r24, r16
     f88:	dd cf       	rjmp	.-70     	; 0xf44 <_ZN5Print11printNumberEmh+0x4e>
     f8a:	c2 01       	movw	r24, r4
     f8c:	b6 01       	movw	r22, r12
     f8e:	0e 94 67 07 	call	0xece	; 0xece <_ZN5Print5writeEPKc>
     f92:	a1 96       	adiw	r28, 0x21	; 33
     f94:	0f b6       	in	r0, 0x3f	; 63
     f96:	f8 94       	cli
     f98:	de bf       	out	0x3e, r29	; 62
     f9a:	0f be       	out	0x3f, r0	; 63
     f9c:	cd bf       	out	0x3d, r28	; 61
     f9e:	cf 91       	pop	r28
     fa0:	df 91       	pop	r29
     fa2:	1f 91       	pop	r17
     fa4:	0f 91       	pop	r16
     fa6:	ff 90       	pop	r15
     fa8:	ef 90       	pop	r14
     faa:	df 90       	pop	r13
     fac:	cf 90       	pop	r12
     fae:	bf 90       	pop	r11
     fb0:	af 90       	pop	r10
     fb2:	9f 90       	pop	r9
     fb4:	8f 90       	pop	r8
     fb6:	7f 90       	pop	r7
     fb8:	5f 90       	pop	r5
     fba:	4f 90       	pop	r4
     fbc:	08 95       	ret

00000fbe <_ZN5Print5printEli>:
     fbe:	cf 92       	push	r12
     fc0:	df 92       	push	r13
     fc2:	ef 92       	push	r14
     fc4:	ff 92       	push	r15
     fc6:	0f 93       	push	r16
     fc8:	1f 93       	push	r17
     fca:	cf 93       	push	r28
     fcc:	df 93       	push	r29
     fce:	ec 01       	movw	r28, r24
     fd0:	6a 01       	movw	r12, r20
     fd2:	7b 01       	movw	r14, r22
     fd4:	21 15       	cp	r18, r1
     fd6:	31 05       	cpc	r19, r1
     fd8:	41 f4       	brne	.+16     	; 0xfea <_ZN5Print5printEli+0x2c>
     fda:	e8 81       	ld	r30, Y
     fdc:	f9 81       	ldd	r31, Y+1	; 0x01
     fde:	01 90       	ld	r0, Z+
     fe0:	f0 81       	ld	r31, Z
     fe2:	e0 2d       	mov	r30, r0
     fe4:	64 2f       	mov	r22, r20
     fe6:	09 95       	icall
     fe8:	1f c0       	rjmp	.+62     	; 0x1028 <_ZN5Print5printEli+0x6a>
     fea:	2a 30       	cpi	r18, 0x0A	; 10
     fec:	31 05       	cpc	r19, r1
     fee:	d1 f4       	brne	.+52     	; 0x1024 <_ZN5Print5printEli+0x66>
     ff0:	77 ff       	sbrs	r23, 7
     ff2:	17 c0       	rjmp	.+46     	; 0x1022 <_ZN5Print5printEli+0x64>
     ff4:	e8 81       	ld	r30, Y
     ff6:	f9 81       	ldd	r31, Y+1	; 0x01
     ff8:	01 90       	ld	r0, Z+
     ffa:	f0 81       	ld	r31, Z
     ffc:	e0 2d       	mov	r30, r0
     ffe:	6d e2       	ldi	r22, 0x2D	; 45
    1000:	09 95       	icall
    1002:	8c 01       	movw	r16, r24
    1004:	44 27       	eor	r20, r20
    1006:	55 27       	eor	r21, r21
    1008:	ba 01       	movw	r22, r20
    100a:	4c 19       	sub	r20, r12
    100c:	5d 09       	sbc	r21, r13
    100e:	6e 09       	sbc	r22, r14
    1010:	7f 09       	sbc	r23, r15
    1012:	ce 01       	movw	r24, r28
    1014:	2a e0       	ldi	r18, 0x0A	; 10
    1016:	0e 94 7b 07 	call	0xef6	; 0xef6 <_ZN5Print11printNumberEmh>
    101a:	98 01       	movw	r18, r16
    101c:	28 0f       	add	r18, r24
    101e:	39 1f       	adc	r19, r25
    1020:	04 c0       	rjmp	.+8      	; 0x102a <_ZN5Print5printEli+0x6c>
    1022:	2a e0       	ldi	r18, 0x0A	; 10
    1024:	0e 94 7b 07 	call	0xef6	; 0xef6 <_ZN5Print11printNumberEmh>
    1028:	9c 01       	movw	r18, r24
    102a:	c9 01       	movw	r24, r18
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	1f 91       	pop	r17
    1032:	0f 91       	pop	r16
    1034:	ff 90       	pop	r15
    1036:	ef 90       	pop	r14
    1038:	df 90       	pop	r13
    103a:	cf 90       	pop	r12
    103c:	08 95       	ret

0000103e <_ZN5Print7printlnEii>:
    103e:	cf 92       	push	r12
    1040:	df 92       	push	r13
    1042:	ef 92       	push	r14
    1044:	ff 92       	push	r15
    1046:	0f 93       	push	r16
    1048:	1f 93       	push	r17
    104a:	6c 01       	movw	r12, r24
    104c:	7b 01       	movw	r14, r22
    104e:	9a 01       	movw	r18, r20
    1050:	00 27       	eor	r16, r16
    1052:	f7 fc       	sbrc	r15, 7
    1054:	00 95       	com	r16
    1056:	10 2f       	mov	r17, r16
    1058:	b8 01       	movw	r22, r16
    105a:	a7 01       	movw	r20, r14
    105c:	0e 94 df 07 	call	0xfbe	; 0xfbe <_ZN5Print5printEli>
    1060:	8c 01       	movw	r16, r24
    1062:	c6 01       	movw	r24, r12
    1064:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZN5Print7printlnEv>
    1068:	08 0f       	add	r16, r24
    106a:	19 1f       	adc	r17, r25
    106c:	c8 01       	movw	r24, r16
    106e:	1f 91       	pop	r17
    1070:	0f 91       	pop	r16
    1072:	ff 90       	pop	r15
    1074:	ef 90       	pop	r14
    1076:	df 90       	pop	r13
    1078:	cf 90       	pop	r12
    107a:	08 95       	ret

0000107c <_ZN5Print7printlnEPKc>:
    107c:	ef 92       	push	r14
    107e:	ff 92       	push	r15
    1080:	0f 93       	push	r16
    1082:	1f 93       	push	r17
    1084:	7c 01       	movw	r14, r24
    1086:	0e 94 67 07 	call	0xece	; 0xece <_ZN5Print5writeEPKc>
    108a:	8c 01       	movw	r16, r24
    108c:	c7 01       	movw	r24, r14
    108e:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZN5Print7printlnEv>
    1092:	08 0f       	add	r16, r24
    1094:	19 1f       	adc	r17, r25
    1096:	c8 01       	movw	r24, r16
    1098:	1f 91       	pop	r17
    109a:	0f 91       	pop	r16
    109c:	ff 90       	pop	r15
    109e:	ef 90       	pop	r14
    10a0:	08 95       	ret

000010a2 <_Z3maplllll>:
    10a2:	2f 92       	push	r2
    10a4:	3f 92       	push	r3
    10a6:	4f 92       	push	r4
    10a8:	5f 92       	push	r5
    10aa:	6f 92       	push	r6
    10ac:	7f 92       	push	r7
    10ae:	8f 92       	push	r8
    10b0:	9f 92       	push	r9
    10b2:	af 92       	push	r10
    10b4:	bf 92       	push	r11
    10b6:	cf 92       	push	r12
    10b8:	df 92       	push	r13
    10ba:	ef 92       	push	r14
    10bc:	ff 92       	push	r15
    10be:	0f 93       	push	r16
    10c0:	1f 93       	push	r17
    10c2:	df 93       	push	r29
    10c4:	cf 93       	push	r28
    10c6:	cd b7       	in	r28, 0x3d	; 61
    10c8:	de b7       	in	r29, 0x3e	; 62
    10ca:	3b 01       	movw	r6, r22
    10cc:	4c 01       	movw	r8, r24
    10ce:	19 01       	movw	r2, r18
    10d0:	2a 01       	movw	r4, r20
    10d2:	6d 89       	ldd	r22, Y+21	; 0x15
    10d4:	7e 89       	ldd	r23, Y+22	; 0x16
    10d6:	8f 89       	ldd	r24, Y+23	; 0x17
    10d8:	98 8d       	ldd	r25, Y+24	; 0x18
    10da:	6a 19       	sub	r22, r10
    10dc:	7b 09       	sbc	r23, r11
    10de:	8c 09       	sbc	r24, r12
    10e0:	9d 09       	sbc	r25, r13
    10e2:	62 1a       	sub	r6, r18
    10e4:	73 0a       	sbc	r7, r19
    10e6:	84 0a       	sbc	r8, r20
    10e8:	95 0a       	sbc	r9, r21
    10ea:	a4 01       	movw	r20, r8
    10ec:	93 01       	movw	r18, r6
    10ee:	0e 94 9a 08 	call	0x1134	; 0x1134 <__mulsi3>
    10f2:	e2 18       	sub	r14, r2
    10f4:	f3 08       	sbc	r15, r3
    10f6:	04 09       	sbc	r16, r4
    10f8:	15 09       	sbc	r17, r5
    10fa:	a8 01       	movw	r20, r16
    10fc:	97 01       	movw	r18, r14
    10fe:	0e 94 cc 08 	call	0x1198	; 0x1198 <__divmodsi4>
    1102:	2a 0d       	add	r18, r10
    1104:	3b 1d       	adc	r19, r11
    1106:	4c 1d       	adc	r20, r12
    1108:	5d 1d       	adc	r21, r13
    110a:	b9 01       	movw	r22, r18
    110c:	ca 01       	movw	r24, r20
    110e:	cf 91       	pop	r28
    1110:	df 91       	pop	r29
    1112:	1f 91       	pop	r17
    1114:	0f 91       	pop	r16
    1116:	ff 90       	pop	r15
    1118:	ef 90       	pop	r14
    111a:	df 90       	pop	r13
    111c:	cf 90       	pop	r12
    111e:	bf 90       	pop	r11
    1120:	af 90       	pop	r10
    1122:	9f 90       	pop	r9
    1124:	8f 90       	pop	r8
    1126:	7f 90       	pop	r7
    1128:	6f 90       	pop	r6
    112a:	5f 90       	pop	r5
    112c:	4f 90       	pop	r4
    112e:	3f 90       	pop	r3
    1130:	2f 90       	pop	r2
    1132:	08 95       	ret

00001134 <__mulsi3>:
    1134:	db 01       	movw	r26, r22
    1136:	8f 93       	push	r24
    1138:	9f 93       	push	r25
    113a:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <__muluhisi3>
    113e:	bf 91       	pop	r27
    1140:	af 91       	pop	r26
    1142:	a2 9f       	mul	r26, r18
    1144:	80 0d       	add	r24, r0
    1146:	91 1d       	adc	r25, r1
    1148:	a3 9f       	mul	r26, r19
    114a:	90 0d       	add	r25, r0
    114c:	b2 9f       	mul	r27, r18
    114e:	90 0d       	add	r25, r0
    1150:	11 24       	eor	r1, r1
    1152:	08 95       	ret

00001154 <__udivmodsi4>:
    1154:	a1 e2       	ldi	r26, 0x21	; 33
    1156:	1a 2e       	mov	r1, r26
    1158:	aa 1b       	sub	r26, r26
    115a:	bb 1b       	sub	r27, r27
    115c:	fd 01       	movw	r30, r26
    115e:	0d c0       	rjmp	.+26     	; 0x117a <__udivmodsi4_ep>

00001160 <__udivmodsi4_loop>:
    1160:	aa 1f       	adc	r26, r26
    1162:	bb 1f       	adc	r27, r27
    1164:	ee 1f       	adc	r30, r30
    1166:	ff 1f       	adc	r31, r31
    1168:	a2 17       	cp	r26, r18
    116a:	b3 07       	cpc	r27, r19
    116c:	e4 07       	cpc	r30, r20
    116e:	f5 07       	cpc	r31, r21
    1170:	20 f0       	brcs	.+8      	; 0x117a <__udivmodsi4_ep>
    1172:	a2 1b       	sub	r26, r18
    1174:	b3 0b       	sbc	r27, r19
    1176:	e4 0b       	sbc	r30, r20
    1178:	f5 0b       	sbc	r31, r21

0000117a <__udivmodsi4_ep>:
    117a:	66 1f       	adc	r22, r22
    117c:	77 1f       	adc	r23, r23
    117e:	88 1f       	adc	r24, r24
    1180:	99 1f       	adc	r25, r25
    1182:	1a 94       	dec	r1
    1184:	69 f7       	brne	.-38     	; 0x1160 <__udivmodsi4_loop>
    1186:	60 95       	com	r22
    1188:	70 95       	com	r23
    118a:	80 95       	com	r24
    118c:	90 95       	com	r25
    118e:	9b 01       	movw	r18, r22
    1190:	ac 01       	movw	r20, r24
    1192:	bd 01       	movw	r22, r26
    1194:	cf 01       	movw	r24, r30
    1196:	08 95       	ret

00001198 <__divmodsi4>:
    1198:	05 2e       	mov	r0, r21
    119a:	97 fb       	bst	r25, 7
    119c:	1e f4       	brtc	.+6      	; 0x11a4 <__divmodsi4+0xc>
    119e:	00 94       	com	r0
    11a0:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__negsi2>
    11a4:	57 fd       	sbrc	r21, 7
    11a6:	07 d0       	rcall	.+14     	; 0x11b6 <__divmodsi4_neg2>
    11a8:	0e 94 aa 08 	call	0x1154	; 0x1154 <__udivmodsi4>
    11ac:	07 fc       	sbrc	r0, 7
    11ae:	03 d0       	rcall	.+6      	; 0x11b6 <__divmodsi4_neg2>
    11b0:	4e f4       	brtc	.+18     	; 0x11c4 <__divmodsi4_exit>
    11b2:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__negsi2>

000011b6 <__divmodsi4_neg2>:
    11b6:	50 95       	com	r21
    11b8:	40 95       	com	r20
    11ba:	30 95       	com	r19
    11bc:	21 95       	neg	r18
    11be:	3f 4f       	sbci	r19, 0xFF	; 255
    11c0:	4f 4f       	sbci	r20, 0xFF	; 255
    11c2:	5f 4f       	sbci	r21, 0xFF	; 255

000011c4 <__divmodsi4_exit>:
    11c4:	08 95       	ret

000011c6 <__negsi2>:
    11c6:	90 95       	com	r25
    11c8:	80 95       	com	r24
    11ca:	70 95       	com	r23
    11cc:	61 95       	neg	r22
    11ce:	7f 4f       	sbci	r23, 0xFF	; 255
    11d0:	8f 4f       	sbci	r24, 0xFF	; 255
    11d2:	9f 4f       	sbci	r25, 0xFF	; 255
    11d4:	08 95       	ret

000011d6 <__umulhisi3>:
    11d6:	a2 9f       	mul	r26, r18
    11d8:	b0 01       	movw	r22, r0
    11da:	b3 9f       	mul	r27, r19
    11dc:	c0 01       	movw	r24, r0
    11de:	a3 9f       	mul	r26, r19
    11e0:	70 0d       	add	r23, r0
    11e2:	81 1d       	adc	r24, r1
    11e4:	11 24       	eor	r1, r1
    11e6:	91 1d       	adc	r25, r1
    11e8:	b2 9f       	mul	r27, r18
    11ea:	70 0d       	add	r23, r0
    11ec:	81 1d       	adc	r24, r1
    11ee:	11 24       	eor	r1, r1
    11f0:	91 1d       	adc	r25, r1
    11f2:	08 95       	ret

000011f4 <__muluhisi3>:
    11f4:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__umulhisi3>
    11f8:	a5 9f       	mul	r26, r21
    11fa:	90 0d       	add	r25, r0
    11fc:	b4 9f       	mul	r27, r20
    11fe:	90 0d       	add	r25, r0
    1200:	a4 9f       	mul	r26, r20
    1202:	80 0d       	add	r24, r0
    1204:	91 1d       	adc	r25, r1
    1206:	11 24       	eor	r1, r1
    1208:	08 95       	ret

0000120a <__tablejump2__>:
    120a:	ee 0f       	add	r30, r30
    120c:	ff 1f       	adc	r31, r31

0000120e <__tablejump__>:
    120e:	05 90       	lpm	r0, Z+
    1210:	f4 91       	lpm	r31, Z
    1212:	e0 2d       	mov	r30, r0
    1214:	09 94       	ijmp

00001216 <_exit>:
    1216:	f8 94       	cli

00001218 <__stop_program>:
    1218:	ff cf       	rjmp	.-2      	; 0x1218 <__stop_program>
